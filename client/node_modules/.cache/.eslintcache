[{"C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\index.js":"1","C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\App.js":"2","C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\reportWebVitals.js":"3","C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\components\\PlanningPeriodsList.js":"4","C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\components\\PlanningPeriodDetail.js":"5","C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\components\\SystemChangeRequestDetail.js":"6","C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\components\\ChangeRequestDetail.js":"7","C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\components\\DedicatedTeamPlanningPeriodDetail.js":"8","C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\components\\ProjectTeamPlanningPeriodDetail.js":"9","C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\components\\CapacityAndQueue.js":"10","C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\utils.js":"11","C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\components\\TimeSheetsByDatePeriodChart.js":"12","C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\components\\TimeSheetsByDateIssueChart.js":"13"},{"size":3236,"mtime":1629779914556,"results":"14","hashOfConfig":"15"},{"size":135,"mtime":1629779914551,"results":"16","hashOfConfig":"15"},{"size":375,"mtime":1629779914557,"results":"17","hashOfConfig":"15"},{"size":2295,"mtime":1629779914554,"results":"18","hashOfConfig":"15"},{"size":8107,"mtime":1629998059360,"results":"19","hashOfConfig":"15"},{"size":6186,"mtime":1629995207687,"results":"20","hashOfConfig":"15"},{"size":8175,"mtime":1629997993039,"results":"21","hashOfConfig":"15"},{"size":9352,"mtime":1629998033312,"results":"22","hashOfConfig":"15"},{"size":7998,"mtime":1629997877823,"results":"23","hashOfConfig":"15"},{"size":15513,"mtime":1629816224642,"results":"24","hashOfConfig":"15"},{"size":452,"mtime":1629988539883,"results":"25","hashOfConfig":"15"},{"size":2394,"mtime":1629996497139,"results":"26","hashOfConfig":"15"},{"size":2723,"mtime":1629996491109,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"gnqo0z",{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"31"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\index.js",["58"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport '@fontsource/roboto';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport PlanningPeriodsList from \"./components/PlanningPeriodsList\";\r\nimport PlanningPeriodDetail from \"./components/PlanningPeriodDetail\";\r\nimport DedicatedTeamPlanningPeriodDetail from \"./components/DedicatedTeamPlanningPeriodDetail\"\r\nimport ProjectTeamPlanningPeriodDetail from \"./components/ProjectTeamPlanningPeriodDetail\"\r\nimport ChangeRequestDetail from \"./components/ChangeRequestDetail\";\r\nimport SystemChangeRequestDetail from \"./components/SystemChangeRequestDetail\";\r\nimport CapacityAndQueue from \"./components/CapacityAndQueue\"\r\nimport {Box} from \"@material-ui/core\";\r\nimport * as Sentry from \"@sentry/react\";\r\nimport { Integrations } from \"@sentry/tracing\";\r\n\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider\r\n} from \"@apollo/client\";\r\n\r\nSentry.init({\r\n  dsn: \"https://2bdd473a8cea45a495242e7259b2846d@o498438.ingest.sentry.io/5916644\",\r\n  integrations: [new Integrations.BrowserTracing()],\r\n\r\n  // Set tracesSampleRate to 1.0 to capture 100%\r\n  // of transactions for performance monitoring.\r\n  // We recommend adjusting this value in production\r\n  tracesSampleRate: 0.01,\r\n});\r\n\r\nconst client = new ApolloClient({\r\n    uri: process.env.REACT_APP_SECOND_EYE_API_URL,\r\n    cache: new InMemoryCache()\r\n});\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <ApolloProvider client={client}>\r\n            <Box m=\"1rem\">\r\n                <Router>\r\n                    <Switch>\r\n                        {/*<Route exact path=\"/\" >*/}\r\n                        {/*    <Redirect to=\"/planningPeriods/2021\" />*/}\r\n                        {/*</Route>*/}\r\n                        <Route exact path=\"/\" component={ PlanningPeriodsList } />\r\n                        <Route exact path=\"/capacityAndQueue\" component={ CapacityAndQueue } />\r\n                        <Route exact path=\"/planningPeriods\" component={ PlanningPeriodsList } />\r\n                        <Route path=\"/planningPeriods/:planningPeriodId/dedicatedTeams/:dedicatedTeamId\" component={ DedicatedTeamPlanningPeriodDetail } />\r\n                        <Route path=\"/planningPeriods/:planningPeriodId/projectTeams/:projectTeamId\" component={ ProjectTeamPlanningPeriodDetail } />\r\n                        <Route path=\"/planningPeriods/:id\" component={ PlanningPeriodDetail } />\r\n                        <Route path=\"/changeRequests/:id\" component={ ChangeRequestDetail } />\r\n                        <Route path=\"/systemChangeRequests/:id\" component={ SystemChangeRequestDetail } />\r\n                        <Route path=\"/\" component={App} />\r\n                    </Switch>\r\n                </Router>\r\n            </Box>\r\n        </ApolloProvider>\r\n    </React.StrictMode>\r\n    ,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["59","60"],"C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\App.js",[],"C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\reportWebVitals.js",[],"C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\components\\PlanningPeriodsList.js",["61"],"import React, {Component} from \"react\";\r\nimport {gql} from '@apollo/client';\r\nimport { graphql } from '@apollo/client/react/hoc';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Box} from \"@material-ui/core\";\r\nimport {Link as RouterLink} from \"react-router-dom\";\r\n\r\nconst fetchPlanningPeriods = gql`\r\n    query PlanningPeriods {\r\n        planningPeriods {\r\n            id \r\n            name\r\n            start\r\n            end\r\n        }\r\n    }\r\n`;\r\n\r\nclass PlanningPeriodsList extends Component {\r\n    render() {\r\n        if (this.props.data.loading) { return <div>Loading ...</div> }\r\n\r\n        const planningPeriods = this.props.data.planningPeriods\r\n\r\n        return (\r\n            <Box>\r\n                <Typography variant=\"body1\">\r\n                    <RouterLink to={ `/capacityAndQueue` }>\r\n                        Очереди по командам\r\n                    </RouterLink>\r\n                </Typography>\r\n                <br />\r\n\r\n                <Typography variant=\"body1\">\r\n                    Периоды\r\n                </Typography>\r\n\r\n                <ul>\r\n                    { planningPeriods\r\n                        .slice()\r\n                        .sort(function(a, b) {\r\n                            if (a.start < b.start) {\r\n                                return 1;\r\n                            }\r\n                            if (a.start === b.start) {\r\n                                return 0;\r\n                            }\r\n                            if (a.start > b.start) {\r\n                                return -1;\r\n                            }\r\n                        })\r\n                        .map(planningPeriod => (\r\n                            <li key={ planningPeriod.id }>\r\n                                <RouterLink to={ `/planningPeriods/${planningPeriod.id}` }>\r\n                                { planningPeriod.name }\r\n                                </RouterLink>\r\n                                &nbsp;\r\n                                ({ planningPeriod.start } - { planningPeriod.end })\r\n                            </li>\r\n                        )\r\n                    )}\r\n                </ul>\r\n            </Box>\r\n        );\r\n    }\r\n}\r\n\r\nexport default graphql(fetchPlanningPeriods)(PlanningPeriodsList);","C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\components\\PlanningPeriodDetail.js",["62","63","64","65","66"],"C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\components\\SystemChangeRequestDetail.js",[],"C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\components\\ChangeRequestDetail.js",[],"C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\components\\DedicatedTeamPlanningPeriodDetail.js",["67","68","69","70","71"],"C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\components\\ProjectTeamPlanningPeriodDetail.js",["72","73","74","75"],"C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\components\\CapacityAndQueue.js",["76","77","78"],"import React, {Component} from \"react\";\r\nimport {gql} from '@apollo/client';\r\nimport { graphql } from '@apollo/client/react/hoc';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Box} from \"@material-ui/core\";\r\nimport {Link as RouterLink} from \"react-router-dom\";\r\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\nimport { DataGrid, GridToolbarContainer, GridToolbarExport, } from '@material-ui/data-grid';\r\n\r\nconst fetchCapacityAndQueue = gql`\r\n    query capacityAndQueue {\r\n        companies {\r\n            id\r\n            name\r\n            actualChangeRequestCapacity\r\n            actualAnalysisCapacity\r\n            actualDevelopmentCapacity\r\n            actualTestingCapacity\r\n            \r\n            timeLeft\r\n            analysisTimeLeft\r\n            developmentTimeLeft\r\n            testingTimeLeft\r\n            \r\n            queueLength\r\n            analysisQueueLength\r\n            developmentQueueLength\r\n            testingQueueLength\r\n        }\r\n        \r\n        dedicatedTeams {\r\n            id\r\n            name\r\n            actualChangeRequestCapacity\r\n            actualAnalysisCapacity\r\n            actualDevelopmentCapacity\r\n            actualTestingCapacity\r\n            \r\n            timeLeft\r\n            analysisTimeLeft\r\n            developmentTimeLeft\r\n            testingTimeLeft\r\n            \r\n            queueLength\r\n            analysisQueueLength\r\n            developmentQueueLength\r\n            testingQueueLength\r\n        }\r\n        \r\n        projectTeams {\r\n            id\r\n            name\r\n            actualChangeRequestCapacity\r\n            actualAnalysisCapacity\r\n            actualDevelopmentCapacity\r\n            actualTestingCapacity\r\n            \r\n            timeLeft\r\n            analysisTimeLeft\r\n            developmentTimeLeft\r\n            testingTimeLeft\r\n            \r\n            queueLength\r\n            analysisQueueLength\r\n            developmentQueueLength\r\n            testingQueueLength\r\n            \r\n            dedicatedTeam {\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nfunction ToolBarWithExport() {\r\n  return (\r\n    <GridToolbarContainer>\r\n      <GridToolbarExport />\r\n    </GridToolbarContainer>\r\n  );\r\n}\r\n\r\nclass CapacityAndQueue extends Component {\r\n    render() {\r\n        if (this.props.data.loading) { return <div>Loading ...</div> }\r\n\r\n        const companies = this.props.data.companies\r\n        const dedicatedTeams = this.props.data.dedicatedTeams\r\n        const projectTeams = this.props.data.projectTeams\r\n\r\n        const companiesQueue = companies.slice().map(\r\n            company => {\r\n                return {\r\n                    id: company.id,\r\n                    name: company.name,\r\n                    queueLength: Math.round(company.queueLength / 22),\r\n                    analysisQueueLength: Math.round(company.analysisQueueLength / 22),\r\n                    developmentQueueLength: Math.round(company.developmentQueueLength / 22),\r\n                    testingQueueLength: Math.round(company.testingQueueLength / 22)\r\n                }\r\n            }\r\n        )\r\n\r\n        const dedicatedTeamsQueue = dedicatedTeams.slice().map(\r\n            dedicatedTeam => {\r\n                return {\r\n                    id: dedicatedTeam.id,\r\n                    name: dedicatedTeam.name,\r\n                    queueLength: Math.round(dedicatedTeam.queueLength / 22),\r\n                    analysisQueueLength: Math.round(dedicatedTeam.analysisQueueLength / 22),\r\n                    developmentQueueLength: Math.round(dedicatedTeam.developmentQueueLength / 22),\r\n                    testingQueueLength: Math.round(dedicatedTeam.testingQueueLength / 22)\r\n                }\r\n            }\r\n        )\r\n\r\n        const projectTeamsQueue = projectTeams.slice().map(\r\n            projectTeam => {\r\n                return {\r\n                    id: projectTeam.id,\r\n                    name: projectTeam.name + \" : \" + projectTeam.dedicatedTeam.name,\r\n                    queueLength: Math.round(projectTeam.queueLength / 22),\r\n                    manDaysLeft: Math.round(projectTeam.timeLeft / 8 * 10) / 10,\r\n                    fte: Math.round(projectTeam.actualChangeRequestCapacity / 8 * 10) / 10,\r\n                    analysisFte: Math.round(projectTeam.actualAnalysisCapacity / 8 * 10) / 10,\r\n                    analysisManDaysLeft: Math.round(projectTeam.analysisTimeLeft / 8 * 10) / 10,\r\n                    developmentFte: Math.round(projectTeam.actualDevelopmentCapacity / 8 * 10) / 10,\r\n                    developmentManDaysLeft: Math.round(projectTeam.developmentTimeLeft / 8 * 10) / 10,\r\n                    testingFte: Math.round(projectTeam.actualTestingCapacity / 8 * 10) / 10,\r\n                    testingManDaysLeft: Math.round(projectTeam.testingTimeLeft / 8 * 10) / 10,\r\n                    analysisQueueLength: Math.round(projectTeam.analysisQueueLength / 22),\r\n                    developmentQueueLength: Math.round(projectTeam.developmentQueueLength / 22),\r\n                    testingQueueLength: Math.round(projectTeam.testingQueueLength / 22)\r\n                }\r\n            }\r\n        )\r\n\r\n        const top10ProjectTeams = projectTeamsQueue.sort(\r\n            function(a, b) {\r\n                return Math.max(\r\n                    b.queueLength,\r\n                    b.analysisQueueLength,\r\n                    b.developmentQueueLength,\r\n                    b.testingQueueLength\r\n                ) - Math.max(\r\n                    a.queueLength,\r\n                    a.analysisQueueLength,\r\n                    a.developmentQueueLength,\r\n                    a.testingQueueLength\r\n                )\r\n            }\r\n        ).slice(0, 9)\r\n\r\n        const top20To50ProjectTeams = projectTeamsQueue.sort(\r\n            function(a, b) {\r\n                return Math.max(\r\n                    b.queueLength,\r\n                    b.analysisQueueLength,\r\n                    b.developmentQueueLength,\r\n                    b.testingQueueLength\r\n                ) - Math.max(\r\n                    a.queueLength,\r\n                    a.analysisQueueLength,\r\n                    a.developmentQueueLength,\r\n                    a.testingQueueLength\r\n                )\r\n            }\r\n        ).slice(10)\r\n\r\n        const topDedicatedTeamsWithCompanies = companiesQueue.concat(dedicatedTeamsQueue).sort(\r\n                        function(a, b) {\r\n                return Math.max(\r\n                    b.queueLength,\r\n                    b.analysisQueueLength,\r\n                    b.developmentQueueLength,\r\n                    b.testingQueueLength\r\n                ) - Math.max(\r\n                    a.queueLength,\r\n                    a.analysisQueueLength,\r\n                    a.developmentQueueLength,\r\n                    a.testingQueueLength\r\n                )\r\n            }\r\n        )\r\n\r\n        const topDedicatedTeamsWithCompaniesColumns = [\r\n            {\r\n                field: 'name',\r\n                headerName: 'Название',\r\n                flex: 1,\r\n            },\r\n            {\r\n                field: 'queueLength',\r\n                headerName: 'Очередь (мес)',\r\n                flex: 1,\r\n            },\r\n            {\r\n                field: 'analysisQueueLength',\r\n                headerName: 'Очередь аналитики (мес)',\r\n                flex: 1,\r\n            },\r\n            {\r\n                field: 'developmentQueueLength',\r\n                headerName: 'Очередь разработки (мес)',\r\n                flex: 1,\r\n            },\r\n            {\r\n                field: 'testingQueueLength',\r\n                headerName: 'Очередь тестирования (мес)',\r\n                flex: 1,\r\n            },\r\n        ];\r\n\r\n        const topProjectTeams = projectTeamsQueue.sort(\r\n                        function(a, b) {\r\n                return Math.max(\r\n                    b.queueLength,\r\n                    b.analysisQueueLength,\r\n                    b.developmentQueueLength,\r\n                    b.testingQueueLength\r\n                ) - Math.max(\r\n                    a.queueLength,\r\n                    a.analysisQueueLength,\r\n                    a.developmentQueueLength,\r\n                    a.testingQueueLength\r\n                )\r\n            }\r\n        )\r\n\r\n        const topProjectTeamsColumns = [\r\n            {\r\n                field: 'name',\r\n                headerName: 'Название',\r\n                flex: 1,\r\n            },\r\n            {\r\n                field: 'queueLength',\r\n                headerName: 'Очередь (мес)',\r\n                flex: 1,\r\n            },\r\n            {\r\n                field: 'manDaysLeft',\r\n                headerName: 'Трудоемкость (чел дней)',\r\n                flex: 1,\r\n            },\r\n            {\r\n                field: 'fte',\r\n                headerName: 'Трудомощность FTE',\r\n                flex: 1,\r\n            },\r\n            {\r\n                field: 'analysisQueueLength',\r\n                headerName: 'Очередь аналитики (мес)',\r\n                flex: 1,\r\n            },\r\n            {\r\n                field: 'analysisManDaysLeft',\r\n                headerName: 'Трудоемкость аналитики (чел дней)',\r\n                flex: 1,\r\n            },\r\n            {\r\n                field: 'analysisFte',\r\n                headerName: 'Трудомощность аналитики FTE',\r\n                flex: 1,\r\n            },\r\n            {\r\n                field: 'developmentQueueLength',\r\n                headerName: 'Очередь разработки (мес)',\r\n                flex: 1,\r\n            },\r\n            {\r\n                field: 'developmentManDaysLeft',\r\n                headerName: 'Трудоемкость разработки (чел дней)',\r\n                flex: 1,\r\n            },\r\n            {\r\n                field: 'developmentFte',\r\n                headerName: 'Трудомощность разработки FTE',\r\n                flex: 1,\r\n            },\r\n            {\r\n                field: 'testingQueueLength',\r\n                headerName: 'Очередь тестирования (мес)',\r\n                flex: 1,\r\n            },\r\n            {\r\n                field: 'testingManDaysLeft',\r\n                headerName: 'Трудоемкость тестирования (чел дней)',\r\n                flex: 1,\r\n            },\r\n            {\r\n                field: 'testingFte',\r\n                headerName: 'Трудомощность тестирования FTE',\r\n                flex: 1,\r\n            },\r\n        ];\r\n\r\n        return (\r\n            <Box>\r\n                <Typography variant=\"body1\">\r\n                    Выделенные команды (месяцы)\r\n                </Typography>\r\n                <BarChart\r\n                    width={1600}\r\n                    height={800}\r\n                    data={topDedicatedTeamsWithCompanies}\r\n                    margin={{\r\n                        top: 5,\r\n                        right: 30,\r\n                        left: 30,\r\n                        bottom: 400,\r\n                    }}\r\n                    barCategoryGap=\"10%\"\r\n                    barGap=\"0%\"\r\n                >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"name\" interval={0} angle={-90} textAnchor=\"end\" fontSize={10} fontFamily={\"Helvetica\"} />\r\n                    <YAxis domain={['auto', 'auto']} />\r\n                    <Tooltip />\r\n                    <Legend layout=\"horizontal\" verticalAlign=\"top\" align=\"center\" />\r\n                    <Bar dataKey=\"analysisQueueLength\" fill=\"red\" name={\"Аналитика\"} />\r\n                    <Bar dataKey=\"developmentQueueLength\" fill=\"green\" name={\"Разработка\"} />\r\n                    <Bar dataKey=\"testingQueueLength\" fill=\"blue\" name={\"Тестирование\"} />\r\n                </BarChart>\r\n\r\n                <div style={{ height: 400, width: '100%' }}>\r\n                    <DataGrid\r\n                        rows={topDedicatedTeamsWithCompanies}\r\n                        columns={topDedicatedTeamsWithCompaniesColumns}\r\n                        components={{\r\n                            Toolbar: ToolBarWithExport,\r\n                        }}\r\n                    />\r\n                </div>\r\n\r\n                <Typography variant=\"body1\">\r\n                    Top-10 проектных команд (месяцы)\r\n                </Typography>\r\n                <BarChart\r\n                    width={1600}\r\n                    height={800}\r\n                    data={top10ProjectTeams}\r\n                    margin={{\r\n                        top: 5,\r\n                        right: 30,\r\n                        left: 30,\r\n                        bottom: 400,\r\n                    }}\r\n                    barCategoryGap=\"10%\"\r\n                    barGap=\"0%\"\r\n                >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"name\" interval={0} angle={-90} textAnchor=\"end\" fontSize={10} fontFamily={\"Helvetica\"} />\r\n                    <YAxis domain={['auto', 'auto']} />\r\n                    <Tooltip />\r\n                    <Legend layout=\"horizontal\" verticalAlign=\"top\" align=\"center\" />\r\n                    <Bar dataKey=\"analysisQueueLength\" fill=\"red\" name={\"Аналитика\"} />\r\n                    <Bar dataKey=\"developmentQueueLength\" fill=\"green\" name={\"Разработка\"} />\r\n                    <Bar dataKey=\"testingQueueLength\" fill=\"blue\" name={\"Тестирование\"} />\r\n                </BarChart>\r\n\r\n                <Typography variant=\"body1\">\r\n                    Остальные проектные команды (месяцы)\r\n                </Typography>\r\n                <BarChart\r\n                    width={1600}\r\n                    height={800}\r\n                    data={top20To50ProjectTeams}\r\n                    margin={{\r\n                        top: 5,\r\n                        right: 30,\r\n                        left: 30,\r\n                        bottom: 400,\r\n                    }}\r\n                    barCategoryGap=\"10%\"\r\n                    barGap=\"0%\"\r\n                >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"name\" interval={0} angle={-90} textAnchor=\"end\" fontSize={10} fontFamily={\"Helvetica\"} />\r\n                    <YAxis domain={['auto', 'auto']} />\r\n                    <Tooltip />\r\n                    <Legend layout=\"horizontal\" verticalAlign=\"top\" align=\"center\" />\r\n                    <Bar dataKey=\"analysisQueueLength\" fill=\"red\" name={\"Аналитика\"} />\r\n                    <Bar dataKey=\"developmentQueueLength\" fill=\"green\" name={\"Разработка\"} />\r\n                    <Bar dataKey=\"testingQueueLength\" fill=\"blue\" name={\"Тестирование\"} />\r\n                </BarChart>\r\n\r\n                <div style={{ height: 400, width: '100%' }}>\r\n                    <DataGrid\r\n                        rows={topProjectTeams}\r\n                        columns={topProjectTeamsColumns}\r\n                        components={{\r\n                            Toolbar: ToolBarWithExport,\r\n                        }}\r\n                    />\r\n                </div>\r\n            </Box>\r\n        );\r\n    }\r\n}\r\n\r\nexport default graphql(fetchCapacityAndQueue)(CapacityAndQueue);","C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\utils.js",[],"C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\components\\TimeSheetsByDatePeriodChart.js",["79","80"],"C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\components\\TimeSheetsByDateIssueChart.js",[],{"ruleId":"81","severity":1,"message":"82","line":11,"column":5,"nodeType":"83","messageId":"84","endLine":11,"endColumn":13},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":41,"column":31,"nodeType":"91","messageId":"92","endLine":41,"endColumn":39},{"ruleId":"81","severity":1,"message":"93","line":5,"column":14,"nodeType":"83","messageId":"84","endLine":5,"endColumn":18},{"ruleId":"81","severity":1,"message":"94","line":56,"column":15,"nodeType":"83","messageId":"84","endLine":56,"endColumn":33},{"ruleId":"81","severity":1,"message":"95","line":67,"column":15,"nodeType":"83","messageId":"84","endLine":67,"endColumn":33},{"ruleId":"81","severity":1,"message":"96","line":68,"column":15,"nodeType":"83","messageId":"84","endLine":68,"endColumn":32},{"ruleId":"89","severity":1,"message":"90","line":132,"column":31,"nodeType":"91","messageId":"92","endLine":132,"endColumn":39},{"ruleId":"81","severity":1,"message":"93","line":5,"column":14,"nodeType":"83","messageId":"84","endLine":5,"endColumn":18},{"ruleId":"81","severity":1,"message":"95","line":72,"column":15,"nodeType":"83","messageId":"84","endLine":72,"endColumn":33},{"ruleId":"81","severity":1,"message":"96","line":73,"column":15,"nodeType":"83","messageId":"84","endLine":73,"endColumn":32},{"ruleId":"89","severity":1,"message":"90","line":142,"column":30,"nodeType":"91","messageId":"92","endLine":142,"endColumn":38},{"ruleId":"97","severity":1,"message":"98","line":146,"column":40,"nodeType":"99","messageId":"100","endLine":146,"endColumn":42},{"ruleId":"81","severity":1,"message":"93","line":5,"column":14,"nodeType":"83","messageId":"84","endLine":5,"endColumn":18},{"ruleId":"81","severity":1,"message":"101","line":52,"column":15,"nodeType":"83","messageId":"84","endLine":52,"endColumn":31},{"ruleId":"81","severity":1,"message":"95","line":67,"column":15,"nodeType":"83","messageId":"84","endLine":67,"endColumn":33},{"ruleId":"81","severity":1,"message":"96","line":68,"column":15,"nodeType":"83","messageId":"84","endLine":68,"endColumn":32},{"ruleId":"81","severity":1,"message":"102","line":6,"column":17,"nodeType":"83","messageId":"84","endLine":6,"endColumn":27},{"ruleId":"81","severity":1,"message":"103","line":7,"column":25,"nodeType":"83","messageId":"84","endLine":7,"endColumn":29},{"ruleId":"81","severity":1,"message":"104","line":7,"column":77,"nodeType":"83","messageId":"84","endLine":7,"endColumn":96},{"ruleId":"81","severity":1,"message":"105","line":8,"column":15,"nodeType":"83","messageId":"84","endLine":8,"endColumn":34},{"ruleId":"81","severity":1,"message":"106","line":9,"column":15,"nodeType":"83","messageId":"84","endLine":9,"endColumn":32},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["107"],"no-negated-in-lhs",["108"],"array-callback-return","Array.prototype.sort() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","'Link' is defined but never used.","'planningPeriodName' is assigned a value but never used.","'firstTimeSheetDate' is assigned a value but never used.","'lastTimeSheetDate' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'planningPeriodId' is assigned a value but never used.","'RouterLink' is defined but never used.","'Cell' is defined but never used.","'ResponsiveContainer' is defined but never used.","'planningPeriodStart' is assigned a value but never used.","'planningPeriodEnd' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]