[{"C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\index.js":"1","C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\App.js":"2","C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\reportWebVitals.js":"3","C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\components\\PlanningPeriodsList.js":"4","C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\components\\PlanningPeriodDetail.js":"5","C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\components\\SystemChangeRequestDetail.js":"6","C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\components\\ChangeRequestDetail.js":"7","C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\components\\DedicatedTeamPlanningPeriodDetail.js":"8","C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\components\\ProjectTeamPlanningPeriodDetail.js":"9","C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\components\\CapacityAndQueue.js":"10","C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\utils.js":"11","C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\components\\TimeSheetsByDatePeriodChart.js":"12","C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\components\\TimeSheetsByDateIssueChart.js":"13","C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\components\\ValueByDatePeriodChart.js":"14"},{"size":3221,"mtime":1630005858212,"results":"15","hashOfConfig":"16"},{"size":135,"mtime":1629779914551,"results":"17","hashOfConfig":"16"},{"size":375,"mtime":1629779914557,"results":"18","hashOfConfig":"16"},{"size":2295,"mtime":1629779914554,"results":"19","hashOfConfig":"16"},{"size":6593,"mtime":1630085979962,"results":"20","hashOfConfig":"16"},{"size":6222,"mtime":1630002312622,"results":"21","hashOfConfig":"16"},{"size":8175,"mtime":1629997993039,"results":"22","hashOfConfig":"16"},{"size":7943,"mtime":1630086538295,"results":"23","hashOfConfig":"16"},{"size":6460,"mtime":1630091124854,"results":"24","hashOfConfig":"16"},{"size":15513,"mtime":1629816224642,"results":"25","hashOfConfig":"16"},{"size":452,"mtime":1629988539883,"results":"26","hashOfConfig":"16"},{"size":3938,"mtime":1630089134316,"results":"27","hashOfConfig":"16"},{"size":3169,"mtime":1630006192540,"results":"28","hashOfConfig":"16"},{"size":3038,"mtime":1630006098143,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"gnqo0z",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\index.js",[],["61","62"],"C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\App.js",[],"C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\reportWebVitals.js",[],"C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\components\\PlanningPeriodsList.js",["63"],"import React, {Component} from \"react\";\r\nimport {gql} from '@apollo/client';\r\nimport { graphql } from '@apollo/client/react/hoc';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Box} from \"@material-ui/core\";\r\nimport {Link as RouterLink} from \"react-router-dom\";\r\n\r\nconst fetchPlanningPeriods = gql`\r\n    query PlanningPeriods {\r\n        planningPeriods {\r\n            id \r\n            name\r\n            start\r\n            end\r\n        }\r\n    }\r\n`;\r\n\r\nclass PlanningPeriodsList extends Component {\r\n    render() {\r\n        if (this.props.data.loading) { return <div>Loading ...</div> }\r\n\r\n        const planningPeriods = this.props.data.planningPeriods\r\n\r\n        return (\r\n            <Box>\r\n                <Typography variant=\"body1\">\r\n                    <RouterLink to={ `/capacityAndQueue` }>\r\n                        Очереди по командам\r\n                    </RouterLink>\r\n                </Typography>\r\n                <br />\r\n\r\n                <Typography variant=\"body1\">\r\n                    Периоды\r\n                </Typography>\r\n\r\n                <ul>\r\n                    { planningPeriods\r\n                        .slice()\r\n                        .sort(function(a, b) {\r\n                            if (a.start < b.start) {\r\n                                return 1;\r\n                            }\r\n                            if (a.start === b.start) {\r\n                                return 0;\r\n                            }\r\n                            if (a.start > b.start) {\r\n                                return -1;\r\n                            }\r\n                        })\r\n                        .map(planningPeriod => (\r\n                            <li key={ planningPeriod.id }>\r\n                                <RouterLink to={ `/planningPeriods/${planningPeriod.id}` }>\r\n                                { planningPeriod.name }\r\n                                </RouterLink>\r\n                                &nbsp;\r\n                                ({ planningPeriod.start } - { planningPeriod.end })\r\n                            </li>\r\n                        )\r\n                    )}\r\n                </ul>\r\n            </Box>\r\n        );\r\n    }\r\n}\r\n\r\nexport default graphql(fetchPlanningPeriods)(PlanningPeriodsList);","C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\components\\PlanningPeriodDetail.js",["64","65","66"],"C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\components\\SystemChangeRequestDetail.js",[],"C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\components\\ChangeRequestDetail.js",[],"C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\components\\DedicatedTeamPlanningPeriodDetail.js",["67","68","69","70"],"C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\components\\ProjectTeamPlanningPeriodDetail.js",["71","72"],"C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\components\\CapacityAndQueue.js",["73","74","75"],"import React, {Component} from \"react\";\r\nimport {gql} from '@apollo/client';\r\nimport { graphql } from '@apollo/client/react/hoc';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Box} from \"@material-ui/core\";\r\nimport {Link as RouterLink} from \"react-router-dom\";\r\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\nimport { DataGrid, GridToolbarContainer, GridToolbarExport, } from '@material-ui/data-grid';\r\n\r\nconst fetchCapacityAndQueue = gql`\r\n    query capacityAndQueue {\r\n        companies {\r\n            id\r\n            name\r\n            actualChangeRequestCapacity\r\n            actualAnalysisCapacity\r\n            actualDevelopmentCapacity\r\n            actualTestingCapacity\r\n            \r\n            timeLeft\r\n            analysisTimeLeft\r\n            developmentTimeLeft\r\n            testingTimeLeft\r\n            \r\n            queueLength\r\n            analysisQueueLength\r\n            developmentQueueLength\r\n            testingQueueLength\r\n        }\r\n        \r\n        dedicatedTeams {\r\n            id\r\n            name\r\n            actualChangeRequestCapacity\r\n            actualAnalysisCapacity\r\n            actualDevelopmentCapacity\r\n            actualTestingCapacity\r\n            \r\n            timeLeft\r\n            analysisTimeLeft\r\n            developmentTimeLeft\r\n            testingTimeLeft\r\n            \r\n            queueLength\r\n            analysisQueueLength\r\n            developmentQueueLength\r\n            testingQueueLength\r\n        }\r\n        \r\n        projectTeams {\r\n            id\r\n            name\r\n            actualChangeRequestCapacity\r\n            actualAnalysisCapacity\r\n            actualDevelopmentCapacity\r\n            actualTestingCapacity\r\n            \r\n            timeLeft\r\n            analysisTimeLeft\r\n            developmentTimeLeft\r\n            testingTimeLeft\r\n            \r\n            queueLength\r\n            analysisQueueLength\r\n            developmentQueueLength\r\n            testingQueueLength\r\n            \r\n            dedicatedTeam {\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nfunction ToolBarWithExport() {\r\n  return (\r\n    <GridToolbarContainer>\r\n      <GridToolbarExport />\r\n    </GridToolbarContainer>\r\n  );\r\n}\r\n\r\nclass CapacityAndQueue extends Component {\r\n    render() {\r\n        if (this.props.data.loading) { return <div>Loading ...</div> }\r\n\r\n        const companies = this.props.data.companies\r\n        const dedicatedTeams = this.props.data.dedicatedTeams\r\n        const projectTeams = this.props.data.projectTeams\r\n\r\n        const companiesQueue = companies.slice().map(\r\n            company => {\r\n                return {\r\n                    id: company.id,\r\n                    name: company.name,\r\n                    queueLength: Math.round(company.queueLength / 22),\r\n                    analysisQueueLength: Math.round(company.analysisQueueLength / 22),\r\n                    developmentQueueLength: Math.round(company.developmentQueueLength / 22),\r\n                    testingQueueLength: Math.round(company.testingQueueLength / 22)\r\n                }\r\n            }\r\n        )\r\n\r\n        const dedicatedTeamsQueue = dedicatedTeams.slice().map(\r\n            dedicatedTeam => {\r\n                return {\r\n                    id: dedicatedTeam.id,\r\n                    name: dedicatedTeam.name,\r\n                    queueLength: Math.round(dedicatedTeam.queueLength / 22),\r\n                    analysisQueueLength: Math.round(dedicatedTeam.analysisQueueLength / 22),\r\n                    developmentQueueLength: Math.round(dedicatedTeam.developmentQueueLength / 22),\r\n                    testingQueueLength: Math.round(dedicatedTeam.testingQueueLength / 22)\r\n                }\r\n            }\r\n        )\r\n\r\n        const projectTeamsQueue = projectTeams.slice().map(\r\n            projectTeam => {\r\n                return {\r\n                    id: projectTeam.id,\r\n                    name: projectTeam.name + \" : \" + projectTeam.dedicatedTeam.name,\r\n                    queueLength: Math.round(projectTeam.queueLength / 22),\r\n                    manDaysLeft: Math.round(projectTeam.timeLeft / 8 * 10) / 10,\r\n                    fte: Math.round(projectTeam.actualChangeRequestCapacity / 8 * 10) / 10,\r\n                    analysisFte: Math.round(projectTeam.actualAnalysisCapacity / 8 * 10) / 10,\r\n                    analysisManDaysLeft: Math.round(projectTeam.analysisTimeLeft / 8 * 10) / 10,\r\n                    developmentFte: Math.round(projectTeam.actualDevelopmentCapacity / 8 * 10) / 10,\r\n                    developmentManDaysLeft: Math.round(projectTeam.developmentTimeLeft / 8 * 10) / 10,\r\n                    testingFte: Math.round(projectTeam.actualTestingCapacity / 8 * 10) / 10,\r\n                    testingManDaysLeft: Math.round(projectTeam.testingTimeLeft / 8 * 10) / 10,\r\n                    analysisQueueLength: Math.round(projectTeam.analysisQueueLength / 22),\r\n                    developmentQueueLength: Math.round(projectTeam.developmentQueueLength / 22),\r\n                    testingQueueLength: Math.round(projectTeam.testingQueueLength / 22)\r\n                }\r\n            }\r\n        )\r\n\r\n        const top10ProjectTeams = projectTeamsQueue.sort(\r\n            function(a, b) {\r\n                return Math.max(\r\n                    b.queueLength,\r\n                    b.analysisQueueLength,\r\n                    b.developmentQueueLength,\r\n                    b.testingQueueLength\r\n                ) - Math.max(\r\n                    a.queueLength,\r\n                    a.analysisQueueLength,\r\n                    a.developmentQueueLength,\r\n                    a.testingQueueLength\r\n                )\r\n            }\r\n        ).slice(0, 9)\r\n\r\n        const top20To50ProjectTeams = projectTeamsQueue.sort(\r\n            function(a, b) {\r\n                return Math.max(\r\n                    b.queueLength,\r\n                    b.analysisQueueLength,\r\n                    b.developmentQueueLength,\r\n                    b.testingQueueLength\r\n                ) - Math.max(\r\n                    a.queueLength,\r\n                    a.analysisQueueLength,\r\n                    a.developmentQueueLength,\r\n                    a.testingQueueLength\r\n                )\r\n            }\r\n        ).slice(10)\r\n\r\n        const topDedicatedTeamsWithCompanies = companiesQueue.concat(dedicatedTeamsQueue).sort(\r\n                        function(a, b) {\r\n                return Math.max(\r\n                    b.queueLength,\r\n                    b.analysisQueueLength,\r\n                    b.developmentQueueLength,\r\n                    b.testingQueueLength\r\n                ) - Math.max(\r\n                    a.queueLength,\r\n                    a.analysisQueueLength,\r\n                    a.developmentQueueLength,\r\n                    a.testingQueueLength\r\n                )\r\n            }\r\n        )\r\n\r\n        const topDedicatedTeamsWithCompaniesColumns = [\r\n            {\r\n                field: 'name',\r\n                headerName: 'Название',\r\n                flex: 1,\r\n            },\r\n            {\r\n                field: 'queueLength',\r\n                headerName: 'Очередь (мес)',\r\n                flex: 1,\r\n            },\r\n            {\r\n                field: 'analysisQueueLength',\r\n                headerName: 'Очередь аналитики (мес)',\r\n                flex: 1,\r\n            },\r\n            {\r\n                field: 'developmentQueueLength',\r\n                headerName: 'Очередь разработки (мес)',\r\n                flex: 1,\r\n            },\r\n            {\r\n                field: 'testingQueueLength',\r\n                headerName: 'Очередь тестирования (мес)',\r\n                flex: 1,\r\n            },\r\n        ];\r\n\r\n        const topProjectTeams = projectTeamsQueue.sort(\r\n                        function(a, b) {\r\n                return Math.max(\r\n                    b.queueLength,\r\n                    b.analysisQueueLength,\r\n                    b.developmentQueueLength,\r\n                    b.testingQueueLength\r\n                ) - Math.max(\r\n                    a.queueLength,\r\n                    a.analysisQueueLength,\r\n                    a.developmentQueueLength,\r\n                    a.testingQueueLength\r\n                )\r\n            }\r\n        )\r\n\r\n        const topProjectTeamsColumns = [\r\n            {\r\n                field: 'name',\r\n                headerName: 'Название',\r\n                flex: 1,\r\n            },\r\n            {\r\n                field: 'queueLength',\r\n                headerName: 'Очередь (мес)',\r\n                flex: 1,\r\n            },\r\n            {\r\n                field: 'manDaysLeft',\r\n                headerName: 'Трудоемкость (чел дней)',\r\n                flex: 1,\r\n            },\r\n            {\r\n                field: 'fte',\r\n                headerName: 'Трудомощность FTE',\r\n                flex: 1,\r\n            },\r\n            {\r\n                field: 'analysisQueueLength',\r\n                headerName: 'Очередь аналитики (мес)',\r\n                flex: 1,\r\n            },\r\n            {\r\n                field: 'analysisManDaysLeft',\r\n                headerName: 'Трудоемкость аналитики (чел дней)',\r\n                flex: 1,\r\n            },\r\n            {\r\n                field: 'analysisFte',\r\n                headerName: 'Трудомощность аналитики FTE',\r\n                flex: 1,\r\n            },\r\n            {\r\n                field: 'developmentQueueLength',\r\n                headerName: 'Очередь разработки (мес)',\r\n                flex: 1,\r\n            },\r\n            {\r\n                field: 'developmentManDaysLeft',\r\n                headerName: 'Трудоемкость разработки (чел дней)',\r\n                flex: 1,\r\n            },\r\n            {\r\n                field: 'developmentFte',\r\n                headerName: 'Трудомощность разработки FTE',\r\n                flex: 1,\r\n            },\r\n            {\r\n                field: 'testingQueueLength',\r\n                headerName: 'Очередь тестирования (мес)',\r\n                flex: 1,\r\n            },\r\n            {\r\n                field: 'testingManDaysLeft',\r\n                headerName: 'Трудоемкость тестирования (чел дней)',\r\n                flex: 1,\r\n            },\r\n            {\r\n                field: 'testingFte',\r\n                headerName: 'Трудомощность тестирования FTE',\r\n                flex: 1,\r\n            },\r\n        ];\r\n\r\n        return (\r\n            <Box>\r\n                <Typography variant=\"body1\">\r\n                    Выделенные команды (месяцы)\r\n                </Typography>\r\n                <BarChart\r\n                    width={1600}\r\n                    height={800}\r\n                    data={topDedicatedTeamsWithCompanies}\r\n                    margin={{\r\n                        top: 5,\r\n                        right: 30,\r\n                        left: 30,\r\n                        bottom: 400,\r\n                    }}\r\n                    barCategoryGap=\"10%\"\r\n                    barGap=\"0%\"\r\n                >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"name\" interval={0} angle={-90} textAnchor=\"end\" fontSize={10} fontFamily={\"Helvetica\"} />\r\n                    <YAxis domain={['auto', 'auto']} />\r\n                    <Tooltip />\r\n                    <Legend layout=\"horizontal\" verticalAlign=\"top\" align=\"center\" />\r\n                    <Bar dataKey=\"analysisQueueLength\" fill=\"red\" name={\"Аналитика\"} />\r\n                    <Bar dataKey=\"developmentQueueLength\" fill=\"green\" name={\"Разработка\"} />\r\n                    <Bar dataKey=\"testingQueueLength\" fill=\"blue\" name={\"Тестирование\"} />\r\n                </BarChart>\r\n\r\n                <div style={{ height: 400, width: '100%' }}>\r\n                    <DataGrid\r\n                        rows={topDedicatedTeamsWithCompanies}\r\n                        columns={topDedicatedTeamsWithCompaniesColumns}\r\n                        components={{\r\n                            Toolbar: ToolBarWithExport,\r\n                        }}\r\n                    />\r\n                </div>\r\n\r\n                <Typography variant=\"body1\">\r\n                    Top-10 проектных команд (месяцы)\r\n                </Typography>\r\n                <BarChart\r\n                    width={1600}\r\n                    height={800}\r\n                    data={top10ProjectTeams}\r\n                    margin={{\r\n                        top: 5,\r\n                        right: 30,\r\n                        left: 30,\r\n                        bottom: 400,\r\n                    }}\r\n                    barCategoryGap=\"10%\"\r\n                    barGap=\"0%\"\r\n                >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"name\" interval={0} angle={-90} textAnchor=\"end\" fontSize={10} fontFamily={\"Helvetica\"} />\r\n                    <YAxis domain={['auto', 'auto']} />\r\n                    <Tooltip />\r\n                    <Legend layout=\"horizontal\" verticalAlign=\"top\" align=\"center\" />\r\n                    <Bar dataKey=\"analysisQueueLength\" fill=\"red\" name={\"Аналитика\"} />\r\n                    <Bar dataKey=\"developmentQueueLength\" fill=\"green\" name={\"Разработка\"} />\r\n                    <Bar dataKey=\"testingQueueLength\" fill=\"blue\" name={\"Тестирование\"} />\r\n                </BarChart>\r\n\r\n                <Typography variant=\"body1\">\r\n                    Остальные проектные команды (месяцы)\r\n                </Typography>\r\n                <BarChart\r\n                    width={1600}\r\n                    height={800}\r\n                    data={top20To50ProjectTeams}\r\n                    margin={{\r\n                        top: 5,\r\n                        right: 30,\r\n                        left: 30,\r\n                        bottom: 400,\r\n                    }}\r\n                    barCategoryGap=\"10%\"\r\n                    barGap=\"0%\"\r\n                >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"name\" interval={0} angle={-90} textAnchor=\"end\" fontSize={10} fontFamily={\"Helvetica\"} />\r\n                    <YAxis domain={['auto', 'auto']} />\r\n                    <Tooltip />\r\n                    <Legend layout=\"horizontal\" verticalAlign=\"top\" align=\"center\" />\r\n                    <Bar dataKey=\"analysisQueueLength\" fill=\"red\" name={\"Аналитика\"} />\r\n                    <Bar dataKey=\"developmentQueueLength\" fill=\"green\" name={\"Разработка\"} />\r\n                    <Bar dataKey=\"testingQueueLength\" fill=\"blue\" name={\"Тестирование\"} />\r\n                </BarChart>\r\n\r\n                <div style={{ height: 400, width: '100%' }}>\r\n                    <DataGrid\r\n                        rows={topProjectTeams}\r\n                        columns={topProjectTeamsColumns}\r\n                        components={{\r\n                            Toolbar: ToolBarWithExport,\r\n                        }}\r\n                    />\r\n                </div>\r\n            </Box>\r\n        );\r\n    }\r\n}\r\n\r\nexport default graphql(fetchCapacityAndQueue)(CapacityAndQueue);","C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\utils.js",[],"C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\components\\TimeSheetsByDatePeriodChart.js",[],"C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\components\\TimeSheetsByDateIssueChart.js",[],"C:\\Users\\mikhaylovv\\PycharmProjects\\second_eye\\client\\src\\components\\ValueByDatePeriodChart.js",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":41,"column":31,"nodeType":"82","messageId":"83","endLine":41,"endColumn":39},{"ruleId":"84","severity":1,"message":"85","line":5,"column":14,"nodeType":"86","messageId":"87","endLine":5,"endColumn":18},{"ruleId":"84","severity":1,"message":"88","line":7,"column":8,"nodeType":"86","messageId":"87","endLine":7,"endColumn":14},{"ruleId":"80","severity":1,"message":"81","line":101,"column":31,"nodeType":"82","messageId":"83","endLine":101,"endColumn":39},{"ruleId":"84","severity":1,"message":"85","line":5,"column":14,"nodeType":"86","messageId":"87","endLine":5,"endColumn":18},{"ruleId":"84","severity":1,"message":"88","line":7,"column":8,"nodeType":"86","messageId":"87","endLine":7,"endColumn":14},{"ruleId":"80","severity":1,"message":"81","line":112,"column":30,"nodeType":"82","messageId":"83","endLine":112,"endColumn":38},{"ruleId":"89","severity":1,"message":"90","line":116,"column":40,"nodeType":"91","messageId":"92","endLine":116,"endColumn":42},{"ruleId":"84","severity":1,"message":"85","line":5,"column":14,"nodeType":"86","messageId":"87","endLine":5,"endColumn":18},{"ruleId":"84","severity":1,"message":"88","line":7,"column":8,"nodeType":"86","messageId":"87","endLine":7,"endColumn":14},{"ruleId":"84","severity":1,"message":"93","line":6,"column":17,"nodeType":"86","messageId":"87","endLine":6,"endColumn":27},{"ruleId":"84","severity":1,"message":"94","line":7,"column":25,"nodeType":"86","messageId":"87","endLine":7,"endColumn":29},{"ruleId":"84","severity":1,"message":"95","line":7,"column":77,"nodeType":"86","messageId":"87","endLine":7,"endColumn":96},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"array-callback-return","Array.prototype.sort() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'moment' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'RouterLink' is defined but never used.","'Cell' is defined but never used.","'ResponsiveContainer' is defined but never used.","no-global-assign","no-unsafe-negation"]