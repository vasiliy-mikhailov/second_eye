{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikhaylovv\\\\PycharmProjects\\\\second_eye\\\\client\\\\src\\\\components\\\\CapacityAndQueue.js\";\nimport React, { Component } from \"react\";\nimport { gql } from '@apollo/client';\nimport { graphql } from '@apollo/client/react/hoc';\nimport Typography from '@material-ui/core/Typography';\nimport { Box } from \"@material-ui/core\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchCapacityAndQueue = gql`\n    query capacityAndQueue {\n        companies {\n            id\n            name\n            actualChangeRequestCapacity\n            actualAnalysisCapacity\n            actualDevelopmentCapacity\n            actualTestingCapacity\n            \n            timeLeft\n            analysisTimeLeft\n            developmentTimeLeft\n            testingTimeLeft\n            \n            queueLength\n            analysisQueueLength\n            developmentQueueLength\n            testingQueueLength\n        }\n        \n        dedicatedTeams {\n            id\n            name\n            actualChangeRequestCapacity\n            actualAnalysisCapacity\n            actualDevelopmentCapacity\n            actualTestingCapacity\n            \n            timeLeft\n            analysisTimeLeft\n            developmentTimeLeft\n            testingTimeLeft\n            \n            queueLength\n            analysisQueueLength\n            developmentQueueLength\n            testingQueueLength\n        }\n        \n        projectTeams {\n            id\n            name\n            actualChangeRequestCapacity\n            actualAnalysisCapacity\n            actualDevelopmentCapacity\n            actualTestingCapacity\n            \n            timeLeft\n            analysisTimeLeft\n            developmentTimeLeft\n            testingTimeLeft\n            \n            queueLength\n            analysisQueueLength\n            developmentQueueLength\n            testingQueueLength\n            \n            dedicatedTeam {\n                name\n            }\n        }\n    }\n`;\n\nclass CapacityAndQueue extends Component {\n  render() {\n    if (this.props.data.loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 47\n      }, this);\n    }\n\n    const companies = this.props.data.companies;\n    const dedicatedTeams = this.props.data.dedicatedTeams;\n    const projectTeams = this.props.data.projectTeams;\n    const companiesQueue = companies.slice().map(company => {\n      return {\n        id: company.id,\n        name: company.name,\n        queueLength: Math.round(company.queueLength / 22),\n        analysisQueueLength: Math.round(company.analysisQueueLength / 22),\n        developmentQueueLength: Math.round(company.developmentQueueLength / 22),\n        testingQueueLength: Math.round(company.testingQueueLength / 22)\n      };\n    });\n    const dedicatedTeamsQueue = dedicatedTeams.slice().map(dedicatedTeam => {\n      return {\n        id: dedicatedTeam.id,\n        name: dedicatedTeam.name,\n        queueLength: Math.round(dedicatedTeam.queueLength / 22),\n        analysisQueueLength: Math.round(dedicatedTeam.analysisQueueLength / 22),\n        developmentQueueLength: Math.round(dedicatedTeam.developmentQueueLength / 22),\n        testingQueueLength: Math.round(dedicatedTeam.testingQueueLength / 22)\n      };\n    });\n    const projectTeamsQueue = projectTeams.slice().map(projectTeam => {\n      return {\n        id: projectTeam.id,\n        name: projectTeam.name + \" : \" + projectTeam.dedicatedTeam.name,\n        queueLength: Math.round(projectTeam.queueLength / 22),\n        analysisQueueLength: Math.round(projectTeam.analysisQueueLength / 22),\n        developmentQueueLength: Math.round(projectTeam.developmentQueueLength / 22),\n        testingQueueLength: Math.round(projectTeam.testingQueueLength / 22)\n      };\n    });\n    const top10ProjectTeams = projectTeamsQueue.sort(function (a, b) {\n      return Math.max(b.queueLength, b.analysisQueueLength, b.developmentQueueLength, b.testingQueueLength) - Math.max(a.queueLength, a.analysisQueueLength, a.developmentQueueLength, a.testingQueueLength);\n    }).slice(0, 9);\n    const top20To50ProjectTeams = projectTeamsQueue.sort(function (a, b) {\n      return Math.max(b.queueLength, b.analysisQueueLength, b.developmentQueueLength, b.testingQueueLength) - Math.max(a.queueLength, a.analysisQueueLength, a.developmentQueueLength, a.testingQueueLength);\n    }).slice(10);\n    const topDedicatedTeamsWithCompanies = companiesQueue.concat(dedicatedTeamsQueue).sort(function (a, b) {\n      return Math.max(b.queueLength, b.analysisQueueLength, b.developmentQueueLength, b.testingQueueLength) - Math.max(a.queueLength, a.analysisQueueLength, a.developmentQueueLength, a.testingQueueLength);\n    });\n    const topDedicatedTeamsWithCompaniesColumns = [{\n      field: 'id',\n      headerName: 'id'\n    }, {\n      field: 'name',\n      headerName: 'Название'\n    }, {\n      field: 'queueLength',\n      headerName: 'Очередь (мес)'\n    }, {\n      field: 'analysisQueueLength',\n      headerName: 'Очередь аналитики (мес)'\n    }];\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: \"\\u0412\\u044B\\u0434\\u0435\\u043B\\u0435\\u043D\\u043D\\u044B\\u0435 \\u043A\\u043E\\u043C\\u0430\\u043D\\u0434\\u044B (\\u043C\\u0435\\u0441\\u044F\\u0446\\u044B)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n        width: 1600,\n        height: 800,\n        data: topDedicatedTeamsWithCompanies,\n        margin: {\n          top: 5,\n          right: 30,\n          left: 30,\n          bottom: 400\n        },\n        barCategoryGap: \"10%\",\n        barGap: \"0%\",\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"name\",\n          interval: 0,\n          angle: -90,\n          textAnchor: \"end\",\n          fontSize: 10,\n          fontFamily: \"Helvetica\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          domain: ['auto', 'auto']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {\n          layout: \"horizontal\",\n          verticalAlign: \"top\",\n          align: \"center\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"analysisQueueLength\",\n          fill: \"red\",\n          name: \"Аналитика\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"developmentQueueLength\",\n          fill: \"green\",\n          name: \"Разработка\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"testingQueueLength\",\n          fill: \"blue\",\n          name: \"Тестирование\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: 400,\n          width: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(DataGrid, {\n          rows: topDedicatedTeamsWithCompanies,\n          columns: topDedicatedTeamsWithCompaniesColumns,\n          pageSize: 5,\n          checkboxSelection: true,\n          disableSelectionOnClick: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: \"Top-10 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u043D\\u044B\\u0445 \\u043A\\u043E\\u043C\\u0430\\u043D\\u0434 (\\u043C\\u0435\\u0441\\u044F\\u0446\\u044B)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n        width: 1600,\n        height: 800,\n        data: top10ProjectTeams,\n        margin: {\n          top: 5,\n          right: 30,\n          left: 30,\n          bottom: 400\n        },\n        barCategoryGap: \"10%\",\n        barGap: \"0%\",\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"name\",\n          interval: 0,\n          angle: -90,\n          textAnchor: \"end\",\n          fontSize: 10,\n          fontFamily: \"Helvetica\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          domain: ['auto', 'auto']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {\n          layout: \"horizontal\",\n          verticalAlign: \"top\",\n          align: \"center\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"analysisQueueLength\",\n          fill: \"red\",\n          name: \"Аналитика\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"developmentQueueLength\",\n          fill: \"green\",\n          name: \"Разработка\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"testingQueueLength\",\n          fill: \"blue\",\n          name: \"Тестирование\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: \"\\u041E\\u0441\\u0442\\u0430\\u043B\\u044C\\u043D\\u044B\\u0435 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u043D\\u044B\\u0435 \\u043A\\u043E\\u043C\\u0430\\u043D\\u0434\\u044B (\\u043C\\u0435\\u0441\\u044F\\u0446\\u044B)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n        width: 1600,\n        height: 800,\n        data: top20To50ProjectTeams,\n        margin: {\n          top: 5,\n          right: 30,\n          left: 30,\n          bottom: 400\n        },\n        barCategoryGap: \"10%\",\n        barGap: \"0%\",\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"name\",\n          interval: 0,\n          angle: -90,\n          textAnchor: \"end\",\n          fontSize: 10,\n          fontFamily: \"Helvetica\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          domain: ['auto', 'auto']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {\n          layout: \"horizontal\",\n          verticalAlign: \"top\",\n          align: \"center\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"analysisQueueLength\",\n          fill: \"red\",\n          name: \"Аналитика\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"developmentQueueLength\",\n          fill: \"green\",\n          name: \"Разработка\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"testingQueueLength\",\n          fill: \"blue\",\n          name: \"Тестирование\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default graphql(fetchCapacityAndQueue)(CapacityAndQueue);","map":{"version":3,"sources":["C:/Users/mikhaylovv/PycharmProjects/second_eye/client/src/components/CapacityAndQueue.js"],"names":["React","Component","gql","graphql","Typography","Box","Link","RouterLink","BarChart","Bar","Cell","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","DataGrid","fetchCapacityAndQueue","CapacityAndQueue","render","props","data","loading","companies","dedicatedTeams","projectTeams","companiesQueue","slice","map","company","id","name","queueLength","Math","round","analysisQueueLength","developmentQueueLength","testingQueueLength","dedicatedTeamsQueue","dedicatedTeam","projectTeamsQueue","projectTeam","top10ProjectTeams","sort","a","b","max","top20To50ProjectTeams","topDedicatedTeamsWithCompanies","concat","topDedicatedTeamsWithCompaniesColumns","field","headerName","top","right","left","bottom","height","width"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport {gql} from '@apollo/client';\r\nimport { graphql } from '@apollo/client/react/hoc';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Box} from \"@material-ui/core\";\r\nimport {Link as RouterLink} from \"react-router-dom\";\r\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n\r\nconst fetchCapacityAndQueue = gql`\r\n    query capacityAndQueue {\r\n        companies {\r\n            id\r\n            name\r\n            actualChangeRequestCapacity\r\n            actualAnalysisCapacity\r\n            actualDevelopmentCapacity\r\n            actualTestingCapacity\r\n            \r\n            timeLeft\r\n            analysisTimeLeft\r\n            developmentTimeLeft\r\n            testingTimeLeft\r\n            \r\n            queueLength\r\n            analysisQueueLength\r\n            developmentQueueLength\r\n            testingQueueLength\r\n        }\r\n        \r\n        dedicatedTeams {\r\n            id\r\n            name\r\n            actualChangeRequestCapacity\r\n            actualAnalysisCapacity\r\n            actualDevelopmentCapacity\r\n            actualTestingCapacity\r\n            \r\n            timeLeft\r\n            analysisTimeLeft\r\n            developmentTimeLeft\r\n            testingTimeLeft\r\n            \r\n            queueLength\r\n            analysisQueueLength\r\n            developmentQueueLength\r\n            testingQueueLength\r\n        }\r\n        \r\n        projectTeams {\r\n            id\r\n            name\r\n            actualChangeRequestCapacity\r\n            actualAnalysisCapacity\r\n            actualDevelopmentCapacity\r\n            actualTestingCapacity\r\n            \r\n            timeLeft\r\n            analysisTimeLeft\r\n            developmentTimeLeft\r\n            testingTimeLeft\r\n            \r\n            queueLength\r\n            analysisQueueLength\r\n            developmentQueueLength\r\n            testingQueueLength\r\n            \r\n            dedicatedTeam {\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nclass CapacityAndQueue extends Component {\r\n    render() {\r\n        if (this.props.data.loading) { return <div>Loading ...</div> }\r\n\r\n        const companies = this.props.data.companies\r\n        const dedicatedTeams = this.props.data.dedicatedTeams\r\n        const projectTeams = this.props.data.projectTeams\r\n\r\n        const companiesQueue = companies.slice().map(\r\n            company => {\r\n                return {\r\n                    id: company.id,\r\n                    name: company.name,\r\n                    queueLength: Math.round(company.queueLength / 22),\r\n                    analysisQueueLength: Math.round(company.analysisQueueLength / 22),\r\n                    developmentQueueLength: Math.round(company.developmentQueueLength / 22),\r\n                    testingQueueLength: Math.round(company.testingQueueLength / 22)\r\n                }\r\n            }\r\n        )\r\n\r\n        const dedicatedTeamsQueue = dedicatedTeams.slice().map(\r\n            dedicatedTeam => {\r\n                return {\r\n                    id: dedicatedTeam.id,\r\n                    name: dedicatedTeam.name,\r\n                    queueLength: Math.round(dedicatedTeam.queueLength / 22),\r\n                    analysisQueueLength: Math.round(dedicatedTeam.analysisQueueLength / 22),\r\n                    developmentQueueLength: Math.round(dedicatedTeam.developmentQueueLength / 22),\r\n                    testingQueueLength: Math.round(dedicatedTeam.testingQueueLength / 22)\r\n                }\r\n            }\r\n        )\r\n\r\n        const projectTeamsQueue = projectTeams.slice().map(\r\n            projectTeam => {\r\n                return {\r\n                    id: projectTeam.id,\r\n                    name: projectTeam.name + \" : \" + projectTeam.dedicatedTeam.name,\r\n                    queueLength: Math.round(projectTeam.queueLength / 22),\r\n                    analysisQueueLength: Math.round(projectTeam.analysisQueueLength / 22),\r\n                    developmentQueueLength: Math.round(projectTeam.developmentQueueLength / 22),\r\n                    testingQueueLength: Math.round(projectTeam.testingQueueLength / 22)\r\n                }\r\n            }\r\n        )\r\n\r\n        const top10ProjectTeams = projectTeamsQueue.sort(\r\n            function(a, b) {\r\n                return Math.max(\r\n                    b.queueLength,\r\n                    b.analysisQueueLength,\r\n                    b.developmentQueueLength,\r\n                    b.testingQueueLength\r\n                ) - Math.max(\r\n                    a.queueLength,\r\n                    a.analysisQueueLength,\r\n                    a.developmentQueueLength,\r\n                    a.testingQueueLength\r\n                )\r\n            }\r\n        ).slice(0, 9)\r\n\r\n        const top20To50ProjectTeams = projectTeamsQueue.sort(\r\n            function(a, b) {\r\n                return Math.max(\r\n                    b.queueLength,\r\n                    b.analysisQueueLength,\r\n                    b.developmentQueueLength,\r\n                    b.testingQueueLength\r\n                ) - Math.max(\r\n                    a.queueLength,\r\n                    a.analysisQueueLength,\r\n                    a.developmentQueueLength,\r\n                    a.testingQueueLength\r\n                )\r\n            }\r\n        ).slice(10)\r\n\r\n        const topDedicatedTeamsWithCompanies = companiesQueue.concat(dedicatedTeamsQueue).sort(\r\n                        function(a, b) {\r\n                return Math.max(\r\n                    b.queueLength,\r\n                    b.analysisQueueLength,\r\n                    b.developmentQueueLength,\r\n                    b.testingQueueLength\r\n                ) - Math.max(\r\n                    a.queueLength,\r\n                    a.analysisQueueLength,\r\n                    a.developmentQueueLength,\r\n                    a.testingQueueLength\r\n                )\r\n            }\r\n        )\r\n\r\n        const topDedicatedTeamsWithCompaniesColumns = [\r\n            {\r\n                field: 'id',\r\n                headerName: 'id',\r\n            },\r\n            {\r\n                field: 'name',\r\n                headerName: 'Название',\r\n            },\r\n            {\r\n                field: 'queueLength',\r\n                headerName: 'Очередь (мес)',\r\n            },\r\n            {\r\n                field: 'analysisQueueLength',\r\n                headerName: 'Очередь аналитики (мес)',\r\n            },\r\n        ];\r\n\r\n        return (\r\n            <Box>\r\n                <Typography variant=\"body1\">\r\n                    Выделенные команды (месяцы)\r\n                </Typography>\r\n                <BarChart\r\n                    width={1600}\r\n                    height={800}\r\n                    data={topDedicatedTeamsWithCompanies}\r\n                    margin={{\r\n                        top: 5,\r\n                        right: 30,\r\n                        left: 30,\r\n                        bottom: 400,\r\n                    }}\r\n                    barCategoryGap=\"10%\"\r\n                    barGap=\"0%\"\r\n                >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"name\" interval={0} angle={-90} textAnchor=\"end\" fontSize={10} fontFamily={\"Helvetica\"} />\r\n                    <YAxis domain={['auto', 'auto']} />\r\n                    <Tooltip />\r\n                    <Legend layout=\"horizontal\" verticalAlign=\"top\" align=\"center\" />\r\n                    <Bar dataKey=\"analysisQueueLength\" fill=\"red\" name={\"Аналитика\"} />\r\n                    <Bar dataKey=\"developmentQueueLength\" fill=\"green\" name={\"Разработка\"} />\r\n                    <Bar dataKey=\"testingQueueLength\" fill=\"blue\" name={\"Тестирование\"} />\r\n                </BarChart>\r\n\r\n                <div style={{ height: 400, width: '100%' }}>\r\n                    <DataGrid\r\n                    rows={topDedicatedTeamsWithCompanies}\r\n                    columns={topDedicatedTeamsWithCompaniesColumns}\r\n                    pageSize={5}\r\n                    checkboxSelection\r\n                    disableSelectionOnClick\r\n                    />\r\n                </div>\r\n\r\n                <Typography variant=\"body1\">\r\n                    Top-10 проектных команд (месяцы)\r\n                </Typography>\r\n                <BarChart\r\n                    width={1600}\r\n                    height={800}\r\n                    data={top10ProjectTeams}\r\n                    margin={{\r\n                        top: 5,\r\n                        right: 30,\r\n                        left: 30,\r\n                        bottom: 400,\r\n                    }}\r\n                    barCategoryGap=\"10%\"\r\n                    barGap=\"0%\"\r\n                >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"name\" interval={0} angle={-90} textAnchor=\"end\" fontSize={10} fontFamily={\"Helvetica\"} />\r\n                    <YAxis domain={['auto', 'auto']} />\r\n                    <Tooltip />\r\n                    <Legend layout=\"horizontal\" verticalAlign=\"top\" align=\"center\" />\r\n                    <Bar dataKey=\"analysisQueueLength\" fill=\"red\" name={\"Аналитика\"} />\r\n                    <Bar dataKey=\"developmentQueueLength\" fill=\"green\" name={\"Разработка\"} />\r\n                    <Bar dataKey=\"testingQueueLength\" fill=\"blue\" name={\"Тестирование\"} />\r\n                </BarChart>\r\n\r\n                <Typography variant=\"body1\">\r\n                    Остальные проектные команды (месяцы)\r\n                </Typography>\r\n                <BarChart\r\n                    width={1600}\r\n                    height={800}\r\n                    data={top20To50ProjectTeams}\r\n                    margin={{\r\n                        top: 5,\r\n                        right: 30,\r\n                        left: 30,\r\n                        bottom: 400,\r\n                    }}\r\n                    barCategoryGap=\"10%\"\r\n                    barGap=\"0%\"\r\n                >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"name\" interval={0} angle={-90} textAnchor=\"end\" fontSize={10} fontFamily={\"Helvetica\"} />\r\n                    <YAxis domain={['auto', 'auto']} />\r\n                    <Tooltip />\r\n                    <Legend layout=\"horizontal\" verticalAlign=\"top\" align=\"center\" />\r\n                    <Bar dataKey=\"analysisQueueLength\" fill=\"red\" name={\"Аналитика\"} />\r\n                    <Bar dataKey=\"developmentQueueLength\" fill=\"green\" name={\"Разработка\"} />\r\n                    <Bar dataKey=\"testingQueueLength\" fill=\"blue\" name={\"Тестирование\"} />\r\n                </BarChart>\r\n            </Box>\r\n        );\r\n    }\r\n}\r\n\r\nexport default graphql(fetchCapacityAndQueue)(CapacityAndQueue);"]},"metadata":{},"sourceType":"module"}