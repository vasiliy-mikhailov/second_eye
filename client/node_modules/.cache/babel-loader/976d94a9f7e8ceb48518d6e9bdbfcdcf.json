{"ast":null,"code":"import _classCallCheck from\"C:/Users/mikhaylovv/PycharmProjects/second_eye/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/mikhaylovv/PycharmProjects/second_eye/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/mikhaylovv/PycharmProjects/second_eye/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/mikhaylovv/PycharmProjects/second_eye/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _taggedTemplateLiteral from\"C:/Users/mikhaylovv/PycharmProjects/second_eye/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{Component}from\"react\";import{ScatterChart,CartesianGrid,Legend,XAxis,YAxis,ReferenceLine,ZAxis,Scatter}from\"recharts\";import{gql}from'@apollo/client';import{graphql}from'@apollo/client/react/hoc';import moment from'moment';import Typography from'@material-ui/core/Typography';import{Link as RouterLink,NavLink}from\"react-router-dom\";import{Box,Link}from\"@material-ui/core\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var fetchChangeRequest=gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    query ChangeRequestByIdQuery($id: String!) {\\n        changeRequestById(id: $id) {\\n            id \\n            url\\n            name\\n            state {\\n                name\\n            }\\n            \\n            analysisEstimate\\n            analysisTimeSpent\\n            analysisTimeLeft\\n            analysisTimeSheetsByDate {\\n                date\\n                timeSpentCumsum\\n            }\\n            \\n            developmentEstimate\\n            developmentTimeSpent\\n            developmentTimeLeft\\n            developmentTimeSheetsByDate {\\n                date\\n                timeSpentCumsum\\n            }\\n            \\n            testingEstimate\\n            testingTimeSpent\\n            testingTimeLeft\\n            testingTimeSheetsByDate {\\n                date\\n                timeSpentCumsum\\n            }\\n            \\n            estimate\\n            timeSpent\\n            timeLeft\\n            timeSheetsByDate {\\n                date\\n                timeSpentCumsum\\n            }\\n            \\n            plannedInstallDate\\n            \\n            systemChangeRequests {\\n                id\\n                name\\n                \\n                estimate\\n                timeLeft\\n                state {\\n                    name\\n                }\\n                stateCategory {\\n                    id\\n                }\\n            }\\n        }\\n    }\\n\"])));var ChangeRequestDetail=/*#__PURE__*/function(_Component){_inherits(ChangeRequestDetail,_Component);var _super=_createSuper(ChangeRequestDetail);function ChangeRequestDetail(){_classCallCheck(this,ChangeRequestDetail);return _super.apply(this,arguments);}_createClass(ChangeRequestDetail,[{key:\"render\",value:function render(){if(this.props.data.loading){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading ...\"});}var plannedInstallDate=this.props.data.changeRequestById.plannedInstallDate?new Date(this.props.data.changeRequestById.plannedInstallDate).getTime():null;var timeSheetsByDate=this.props.data.changeRequestById.timeSheetsByDate;var today=new Date().getTime();var firstTimeSheetDate=timeSheetsByDate.length>0?new Date(timeSheetsByDate[0].date).getTime():null;var lastTimeSheetDate=timeSheetsByDate.length>0?new Date(timeSheetsByDate[timeSheetsByDate.length-1].date).getTime():null;var allEdgeDates=[today];if(plannedInstallDate){allEdgeDates.push(plannedInstallDate);}if(firstTimeSheetDate){allEdgeDates.push(firstTimeSheetDate);}if(lastTimeSheetDate){allEdgeDates.push(lastTimeSheetDate);}var xAxisStart=Math.min.apply(Math,allEdgeDates);var xAxisEnd=Math.max.apply(Math,allEdgeDates);return/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",noWrap:true,children:[/*#__PURE__*/_jsx(NavLink,{to:this.props.location.pathname,children:this.props.data.changeRequestById.id}),\" \\xA0\",this.props.data.changeRequestById.name,\" \\xA0\",this.props.data.changeRequestById.state.name,\" \\xA0\",/*#__PURE__*/_jsx(Link,{href:this.props.data.changeRequestById.url,children:\"[ \\u0438\\u0441\\u0442\\u043E\\u0447\\u043D\\u0438\\u043A ]\"}),/*#__PURE__*/_jsx(\"br\",{}),\"\\u041E\\u0441\\u0442\\u0430\\u043B\\u043E\\u0441\\u044C \",this.props.data.changeRequestById.timeLeft,\" \\u0447 ( \",(this.props.data.changeRequestById.timeLeft/this.props.data.changeRequestById.estimate*100).toFixed(2),\"% ) \",/*#__PURE__*/_jsx(\"br\",{}),\"\\u0421\\u0434\\u0435\\u043B\\u0430\\u043D\\u043E \",this.props.data.changeRequestById.timeSpent,\" \\u0447 \",/*#__PURE__*/_jsx(\"br\",{}),\"\\u041E\\u0446\\u0435\\u043D\\u043A\\u0430 \",this.props.data.changeRequestById.estimate,\" \\u0447 \",/*#__PURE__*/_jsx(\"br\",{}),\"\\u041F\\u043B\\u0430\\u043D\\u043E\\u0432\\u0430\\u044F \\u0434\\u0430\\u0442\\u0430 \\u0443\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043A\\u0438 \",plannedInstallDate?moment(plannedInstallDate).format(\"YYYY-MM-DD\"):\"не указана\",\" \",/*#__PURE__*/_jsx(\"br\",{})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(ScatterChart,{width:1440,height:200,margin:{left:-5},children:[/*#__PURE__*/_jsx(CartesianGrid,{}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"date\",type:\"number\",domain:[xAxisStart-1000*60*60*24*28,xAxisEnd+1000*60*60*24*28],allowDataOverflow:true,tickFormatter:function tickFormatter(date){return moment(date).format('YYYY-MM-DD');}}),/*#__PURE__*/_jsx(YAxis,{type:\"number\",dataKey:\"timeSpentCumsum\"}),/*#__PURE__*/_jsx(ZAxis,{type:\"number\",range:[1]}),/*#__PURE__*/_jsx(Legend,{}),this.props.data.changeRequestById.plannedInstallDate?/*#__PURE__*/_jsx(ReferenceLine,{x:new Date(this.props.data.changeRequestById.plannedInstallDate).getTime(),stroke:\"red\",strokeDasharray:\"5 5\",label:\"\\u041F\\u043B\\u0430\\u043D\\u043E\\u0432\\u0430\\u044F \\u0434\\u0430\\u0442\\u0430 \\u0443\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043A\\u0438\",ifOverflow:\"extendDomain\"}):\"\",/*#__PURE__*/_jsx(ReferenceLine,{x:today,stroke:\"blue\",strokeDasharray:\"5 5\",label:\"\\u0421\\u0435\\u0433\\u043E\\u0434\\u043D\\u044F\",ifOverflow:\"extendDomain\"}),/*#__PURE__*/_jsx(ReferenceLine,{y:this.props.data.changeRequestById.estimate,stroke:\"black\",strokeDasharray:\"5 5\",ifOverflow:\"extendDomain\"}),/*#__PURE__*/_jsx(Scatter,{name:\"\\u0421\\u043F\\u0438\\u0441\\u0430\\u043D\\u043E \\u0432\\u0441\\u0435\\u0433\\u043E\",data:this.props.data.changeRequestById.timeSheetsByDate.map(function(item){return{date:new Date(item.date).getTime(),timeSpentCumsum:item.timeSpentCumsum};}),line:true,fill:\"black\"})]}),/*#__PURE__*/_jsxs(ScatterChart,{width:1440,height:200,margin:{left:-5},children:[/*#__PURE__*/_jsx(CartesianGrid,{}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"date\",type:\"number\",domain:[xAxisStart-1000*60*60*24*28,xAxisEnd+1000*60*60*24*28],allowDataOverflow:true,tickFormatter:function tickFormatter(date){return moment(date).format('YYYY-MM-DD');}}),/*#__PURE__*/_jsx(YAxis,{type:\"number\",dataKey:\"timeSpentCumsum\"}),/*#__PURE__*/_jsx(ZAxis,{type:\"number\",range:[1]}),/*#__PURE__*/_jsx(Legend,{}),this.props.data.changeRequestById.plannedInstallDate?/*#__PURE__*/_jsx(ReferenceLine,{x:new Date(this.props.data.changeRequestById.plannedInstallDate).getTime(),stroke:\"red\",strokeDasharray:\"5 5\",label:\"\\u041F\\u043B\\u0430\\u043D\\u043E\\u0432\\u0430\\u044F \\u0434\\u0430\\u0442\\u0430 \\u0443\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043A\\u0438\",ifOverflow:\"extendDomain\"}):\"\",/*#__PURE__*/_jsx(ReferenceLine,{x:today,stroke:\"blue\",strokeDasharray:\"5 5\",label:\"\\u0421\\u0435\\u0433\\u043E\\u0434\\u043D\\u044F\",ifOverflow:\"extendDomain\"}),/*#__PURE__*/_jsx(ReferenceLine,{y:this.props.data.changeRequestById.analysisEstimate,stroke:\"red\",strokeDasharray:\"5 5\",ifOverflow:\"extendDomain\"}),/*#__PURE__*/_jsx(Scatter,{name:\"\\u0421\\u043F\\u0438\\u0441\\u0430\\u043D\\u043E \\u0430\\u043D\\u0430\\u043B\\u0438\\u0442\\u0438\\u043A\\u0430\",data:this.props.data.changeRequestById.analysisTimeSheetsByDate.map(function(item){return{date:new Date(item.date).getTime(),timeSpentCumsum:item.timeSpentCumsum};}),line:true,fill:\"red\"})]}),/*#__PURE__*/_jsxs(ScatterChart,{width:1440,height:200,margin:{left:-5},children:[/*#__PURE__*/_jsx(CartesianGrid,{}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"date\",type:\"number\",domain:[xAxisStart-1000*60*60*24*28,xAxisEnd+1000*60*60*24*28],allowDataOverflow:true,tickFormatter:function tickFormatter(date){return moment(date).format('YYYY-MM-DD');}}),/*#__PURE__*/_jsx(YAxis,{type:\"number\",dataKey:\"timeSpentCumsum\"}),/*#__PURE__*/_jsx(ZAxis,{type:\"number\",range:[1]}),/*#__PURE__*/_jsx(Legend,{}),this.props.data.changeRequestById.plannedInstallDate?/*#__PURE__*/_jsx(ReferenceLine,{x:new Date(this.props.data.changeRequestById.plannedInstallDate).getTime(),stroke:\"red\",strokeDasharray:\"5 5\",label:\"\\u041F\\u043B\\u0430\\u043D\\u043E\\u0432\\u0430\\u044F \\u0434\\u0430\\u0442\\u0430 \\u0443\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043A\\u0438\",ifOverflow:\"extendDomain\"}):\"\",/*#__PURE__*/_jsx(ReferenceLine,{x:today,stroke:\"blue\",strokeDasharray:\"5 5\",label:\"\\u0421\\u0435\\u0433\\u043E\\u0434\\u043D\\u044F\",ifOverflow:\"extendDomain\"}),/*#__PURE__*/_jsx(ReferenceLine,{y:this.props.data.changeRequestById.developmentEstimate,stroke:\"green\",strokeDasharray:\"5 5\",ifOverflow:\"extendDomain\"}),/*#__PURE__*/_jsx(Scatter,{name:\"\\u0421\\u043F\\u0438\\u0441\\u0430\\u043D\\u043E \\u0440\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0430\",data:this.props.data.changeRequestById.developmentTimeSheetsByDate.map(function(item){return{date:new Date(item.date).getTime(),timeSpentCumsum:item.timeSpentCumsum};}),line:true,fill:\"green\"})]}),/*#__PURE__*/_jsxs(ScatterChart,{width:1440,height:200,margin:{left:-5},children:[/*#__PURE__*/_jsx(CartesianGrid,{}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"date\",type:\"number\",domain:[xAxisStart-1000*60*60*24*28,xAxisEnd+1000*60*60*24*28],allowDataOverflow:true,tickFormatter:function tickFormatter(date){return moment(date).format('YYYY-MM-DD');}}),/*#__PURE__*/_jsx(YAxis,{type:\"number\",dataKey:\"timeSpentCumsum\"}),/*#__PURE__*/_jsx(ZAxis,{type:\"number\",range:[1]}),/*#__PURE__*/_jsx(Legend,{}),this.props.data.changeRequestById.plannedInstallDate?/*#__PURE__*/_jsx(ReferenceLine,{x:new Date(this.props.data.changeRequestById.plannedInstallDate).getTime(),stroke:\"red\",strokeDasharray:\"5 5\",label:\"\\u041F\\u043B\\u0430\\u043D\\u043E\\u0432\\u0430\\u044F \\u0434\\u0430\\u0442\\u0430 \\u0443\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043A\\u0438\",ifOverflow:\"extendDomain\"}):\"\",/*#__PURE__*/_jsx(ReferenceLine,{x:today,stroke:\"blue\",strokeDasharray:\"5 5\",label:\"\\u0421\\u0435\\u0433\\u043E\\u0434\\u043D\\u044F\",ifOverflow:\"extendDomain\"}),/*#__PURE__*/_jsx(ReferenceLine,{y:this.props.data.changeRequestById.testingEstimate,stroke:\"blue\",strokeDasharray:\"5 5\",ifOverflow:\"extendDomain\"}),/*#__PURE__*/_jsx(Scatter,{name:\"\\u0421\\u043F\\u0438\\u0441\\u0430\\u043D\\u043E \\u0442\\u0435\\u0441\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\",data:this.props.data.changeRequestById.testingTimeSheetsByDate.map(function(item){return{date:new Date(item.date).getTime(),timeSpentCumsum:item.timeSpentCumsum};}),line:true,fill:\"blue\"})]}),/*#__PURE__*/_jsx(\"ul\",{children:this.props.data.changeRequestById.systemChangeRequests.slice().sort(function(a,b){if(a.stateCategory.id===3&&b.stateCategory.id!==3){return 1;}if(a.stateCategory.id===3&&b.stateCategory.id===3){return 0;}if(a.stateCategory.id!==3&&b.stateCategory.id===3){return-1;}return b.timeLeft-a.timeLeft;}).map(function(systemChangeRequest){return/*#__PURE__*/_jsxs(\"li\",{children:[systemChangeRequest.stateCategory.id!==3?\"\\u041E\\u0441\\u0442\\u0430\\u043B\\u043E\\u0441\\u044C \".concat(systemChangeRequest.timeLeft,\" \\u0447 \"):'',systemChangeRequest.estimate===0&&systemChangeRequest.stateCategory.id!==3?\"\\u041E\\u0446\\u0435\\u043D\\u043A\\u0430 \".concat(systemChangeRequest.estimate,\" \\u0447 \"):'',/*#__PURE__*/_jsx(RouterLink,{style:{textDecoration:systemChangeRequest.stateCategory.id===3?'line-through':'none'},to:\"/systemChangeRequests/\".concat(systemChangeRequest.id),children:systemChangeRequest.name})]},systemChangeRequest.id);})})]});}}]);return ChangeRequestDetail;}(Component);export default graphql(fetchChangeRequest,{options:function options(props){return{variables:{id:props.match.params.id}};}})(ChangeRequestDetail);","map":{"version":3,"sources":["C:/Users/mikhaylovv/PycharmProjects/second_eye/client/src/components/ChangeRequestDetail.js"],"names":["React","Component","ScatterChart","CartesianGrid","Legend","XAxis","YAxis","ReferenceLine","ZAxis","Scatter","gql","graphql","moment","Typography","Link","RouterLink","NavLink","Box","fetchChangeRequest","ChangeRequestDetail","props","data","loading","plannedInstallDate","changeRequestById","Date","getTime","timeSheetsByDate","today","firstTimeSheetDate","length","date","lastTimeSheetDate","allEdgeDates","push","xAxisStart","Math","min","xAxisEnd","max","location","pathname","id","name","state","url","timeLeft","estimate","toFixed","timeSpent","format","left","map","item","timeSpentCumsum","analysisEstimate","analysisTimeSheetsByDate","developmentEstimate","developmentTimeSheetsByDate","testingEstimate","testingTimeSheetsByDate","systemChangeRequests","slice","sort","a","b","stateCategory","systemChangeRequest","textDecoration","options","variables","match","params"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport {\r\n    ScatterChart,\r\n    CartesianGrid,\r\n    Legend,\r\n    XAxis,\r\n    YAxis,\r\n    ReferenceLine,\r\n    ZAxis, Scatter\r\n} from \"recharts\";\r\nimport {gql} from '@apollo/client';\r\nimport { graphql } from '@apollo/client/react/hoc';\r\nimport moment from 'moment';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link as RouterLink, NavLink } from \"react-router-dom\"\r\nimport { Box, Link } from \"@material-ui/core\";\r\n\r\n\r\nconst fetchChangeRequest = gql`\r\n    query ChangeRequestByIdQuery($id: String!) {\r\n        changeRequestById(id: $id) {\r\n            id \r\n            url\r\n            name\r\n            state {\r\n                name\r\n            }\r\n            \r\n            analysisEstimate\r\n            analysisTimeSpent\r\n            analysisTimeLeft\r\n            analysisTimeSheetsByDate {\r\n                date\r\n                timeSpentCumsum\r\n            }\r\n            \r\n            developmentEstimate\r\n            developmentTimeSpent\r\n            developmentTimeLeft\r\n            developmentTimeSheetsByDate {\r\n                date\r\n                timeSpentCumsum\r\n            }\r\n            \r\n            testingEstimate\r\n            testingTimeSpent\r\n            testingTimeLeft\r\n            testingTimeSheetsByDate {\r\n                date\r\n                timeSpentCumsum\r\n            }\r\n            \r\n            estimate\r\n            timeSpent\r\n            timeLeft\r\n            timeSheetsByDate {\r\n                date\r\n                timeSpentCumsum\r\n            }\r\n            \r\n            plannedInstallDate\r\n            \r\n            systemChangeRequests {\r\n                id\r\n                name\r\n                \r\n                estimate\r\n                timeLeft\r\n                state {\r\n                    name\r\n                }\r\n                stateCategory {\r\n                    id\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nclass ChangeRequestDetail extends Component {\r\n    render() {\r\n        if (this.props.data.loading) { return <div>Loading ...</div> }\r\n\r\n        const plannedInstallDate = this.props.data.changeRequestById.plannedInstallDate ? new Date(this.props.data.changeRequestById.plannedInstallDate).getTime() : null\r\n        const timeSheetsByDate = this.props.data.changeRequestById.timeSheetsByDate\r\n\r\n        const today = (new Date()).getTime()\r\n        const firstTimeSheetDate = timeSheetsByDate.length > 0 ? new Date(timeSheetsByDate[0].date).getTime() : null\r\n        const lastTimeSheetDate = timeSheetsByDate.length > 0 ? new Date(timeSheetsByDate[timeSheetsByDate.length - 1].date).getTime() : null\r\n\r\n        const allEdgeDates = [today]\r\n        if (plannedInstallDate) {\r\n            allEdgeDates.push(plannedInstallDate)\r\n        }\r\n\r\n        if (firstTimeSheetDate) {\r\n            allEdgeDates.push(firstTimeSheetDate)\r\n        }\r\n\r\n        if (lastTimeSheetDate) {\r\n            allEdgeDates.push(lastTimeSheetDate)\r\n        }\r\n\r\n        const xAxisStart = Math.min(...allEdgeDates)\r\n        const xAxisEnd = Math.max(...allEdgeDates)\r\n\r\n        return (\r\n            <Box>\r\n                <Typography variant=\"body1\" noWrap>\r\n                    <NavLink to={ this.props.location.pathname }>\r\n                        { this.props.data.changeRequestById.id }\r\n                    </NavLink> &nbsp;\r\n                    { this.props.data.changeRequestById.name } &nbsp;\r\n                    { this.props.data.changeRequestById.state.name } &nbsp;\r\n                    <Link href={ this.props.data.changeRequestById.url }>\r\n                        [ источник ]\r\n                    </Link>\r\n                    <br />\r\n                    Осталось { this.props.data.changeRequestById.timeLeft } ч ( { (this.props.data.changeRequestById.timeLeft / this.props.data.changeRequestById.estimate * 100).toFixed(2) }% ) <br />\r\n                    Сделано { this.props.data.changeRequestById.timeSpent } ч <br />\r\n                    Оценка { this.props.data.changeRequestById.estimate } ч <br />\r\n                    Плановая дата установки { plannedInstallDate ? moment(plannedInstallDate).format(\"YYYY-MM-DD\") : \"не указана\"} <br />\r\n                </Typography>\r\n                <br />\r\n\r\n                <ScatterChart\r\n                    width={1440}\r\n                    height={200}\r\n                    margin={{\r\n                        left: -5,\r\n                    }}\r\n                >\r\n                    <CartesianGrid />\r\n                    <XAxis\r\n                        dataKey=\"date\"\r\n                        type=\"number\"\r\n                        domain={[xAxisStart - 1000 * 60 * 60 * 24 * 28, xAxisEnd + 1000 * 60 * 60 * 24 * 28]}\r\n                        allowDataOverflow={true}\r\n                        tickFormatter={(date) => moment(date).format('YYYY-MM-DD')}\r\n                    />\r\n                    <YAxis type=\"number\" dataKey=\"timeSpentCumsum\" />\r\n                    <ZAxis type=\"number\" range={[1]} />\r\n                    <Legend/>\r\n\r\n                    {\r\n                        (this.props.data.changeRequestById.plannedInstallDate) ?\r\n                            <ReferenceLine x={ new Date(this.props.data.changeRequestById.plannedInstallDate).getTime() } stroke=\"red\" strokeDasharray=\"5 5\" label=\"Плановая дата установки\" ifOverflow=\"extendDomain\"/> :\r\n                            \"\"\r\n                    }\r\n\r\n                    <ReferenceLine x={ today } stroke=\"blue\" strokeDasharray=\"5 5\" label=\"Сегодня\" ifOverflow=\"extendDomain\"/>\r\n\r\n                    <ReferenceLine y={ this.props.data.changeRequestById.estimate } stroke=\"black\" strokeDasharray=\"5 5\" ifOverflow=\"extendDomain\" />\r\n                    <Scatter\r\n                        name=\"Списано всего\"\r\n                        data= {\r\n                            this.props.data.changeRequestById.timeSheetsByDate.map(item => {\r\n                                return { date: new Date(item.date).getTime(), timeSpentCumsum: item.timeSpentCumsum }\r\n                            })\r\n                        }\r\n                        line fill=\"black\"\r\n                    />\r\n                </ScatterChart>\r\n                <ScatterChart\r\n                    width={1440}\r\n                    height={200}\r\n                    margin={{\r\n                        left: -5,\r\n                    }}\r\n                >\r\n                    <CartesianGrid />\r\n                    <XAxis\r\n                        dataKey=\"date\"\r\n                        type=\"number\"\r\n                        domain={[xAxisStart - 1000 * 60 * 60 * 24 * 28, xAxisEnd + 1000 * 60 * 60 * 24 * 28]}\r\n                        allowDataOverflow={true}\r\n                        tickFormatter={(date) => moment(date).format('YYYY-MM-DD')}\r\n                    />\r\n                    <YAxis type=\"number\" dataKey=\"timeSpentCumsum\" />\r\n                    <ZAxis type=\"number\" range={[1]} />\r\n                    <Legend/>\r\n                    {\r\n                        (this.props.data.changeRequestById.plannedInstallDate) ?\r\n                            <ReferenceLine x={ new Date(this.props.data.changeRequestById.plannedInstallDate).getTime() } stroke=\"red\" strokeDasharray=\"5 5\" label=\"Плановая дата установки\" ifOverflow=\"extendDomain\"/> :\r\n                            \"\"\r\n                    }\r\n\r\n                    <ReferenceLine x={ today } stroke=\"blue\" strokeDasharray=\"5 5\" label=\"Сегодня\" ifOverflow=\"extendDomain\"/>\r\n\r\n                    <ReferenceLine y={this.props.data.changeRequestById.analysisEstimate} stroke=\"red\" strokeDasharray=\"5 5\" ifOverflow=\"extendDomain\" />\r\n                    <Scatter\r\n                        name=\"Списано аналитика\"\r\n                        data= {\r\n                            this.props.data.changeRequestById.analysisTimeSheetsByDate.map(item => {\r\n                                return { date: new Date(item.date).getTime(), timeSpentCumsum: item.timeSpentCumsum }\r\n                            })\r\n                        }\r\n                        line fill=\"red\"\r\n                    />\r\n                </ScatterChart>\r\n                 <ScatterChart\r\n                    width={1440}\r\n                    height={200}\r\n                    margin={{\r\n                        left: -5,\r\n                    }}\r\n                >\r\n                    <CartesianGrid />\r\n                    <XAxis\r\n                        dataKey=\"date\"\r\n                        type=\"number\"\r\n                        domain={[xAxisStart - 1000 * 60 * 60 * 24 * 28, xAxisEnd + 1000 * 60 * 60 * 24 * 28]}\r\n                        allowDataOverflow={true}\r\n                        tickFormatter={(date) => moment(date).format('YYYY-MM-DD')}\r\n                    />\r\n                    <YAxis type=\"number\" dataKey=\"timeSpentCumsum\" />\r\n                    <ZAxis type=\"number\" range={[1]} />\r\n                    <Legend/>\r\n                    {\r\n                        (this.props.data.changeRequestById.plannedInstallDate) ?\r\n                            <ReferenceLine x={ new Date(this.props.data.changeRequestById.plannedInstallDate).getTime() } stroke=\"red\" strokeDasharray=\"5 5\" label=\"Плановая дата установки\" ifOverflow=\"extendDomain\"/> :\r\n                            \"\"\r\n                    }\r\n\r\n                    <ReferenceLine x={ today } stroke=\"blue\" strokeDasharray=\"5 5\" label=\"Сегодня\" ifOverflow=\"extendDomain\"/>\r\n\r\n                    <ReferenceLine y={this.props.data.changeRequestById.developmentEstimate} stroke=\"green\" strokeDasharray=\"5 5\" ifOverflow=\"extendDomain\" />\r\n                    <Scatter\r\n                        name=\"Списано разработка\"\r\n                        data= {\r\n                            this.props.data.changeRequestById.developmentTimeSheetsByDate.map(item => {\r\n                                return { date: new Date(item.date).getTime(), timeSpentCumsum: item.timeSpentCumsum }\r\n                            })\r\n                        }\r\n                        line fill=\"green\"\r\n                    />\r\n                </ScatterChart>\r\n                <ScatterChart\r\n                    width={1440}\r\n                    height={200}\r\n                    margin={{\r\n                        left: -5,\r\n                    }}\r\n                >\r\n                    <CartesianGrid />\r\n                    <XAxis\r\n                        dataKey=\"date\"\r\n                        type=\"number\"\r\n                        domain={[xAxisStart - 1000 * 60 * 60 * 24 * 28, xAxisEnd + 1000 * 60 * 60 * 24 * 28]}\r\n                        allowDataOverflow={true}\r\n                        tickFormatter={(date) => moment(date).format('YYYY-MM-DD')}\r\n                    />\r\n                    <YAxis type=\"number\" dataKey=\"timeSpentCumsum\" />\r\n                    <ZAxis type=\"number\" range={[1]} />\r\n                    <Legend/>\r\n                    {\r\n                        (this.props.data.changeRequestById.plannedInstallDate) ?\r\n                            <ReferenceLine x={ new Date(this.props.data.changeRequestById.plannedInstallDate).getTime() } stroke=\"red\" strokeDasharray=\"5 5\" label=\"Плановая дата установки\" ifOverflow=\"extendDomain\"/> :\r\n                            \"\"\r\n                    }\r\n\r\n                    <ReferenceLine x={ today } stroke=\"blue\" strokeDasharray=\"5 5\" label=\"Сегодня\" ifOverflow=\"extendDomain\"/>\r\n\r\n                    <ReferenceLine y={this.props.data.changeRequestById.testingEstimate} stroke=\"blue\" strokeDasharray=\"5 5\" ifOverflow=\"extendDomain\" />\r\n                    <Scatter\r\n                        name=\"Списано тестирование\"\r\n                        data= {\r\n                            this.props.data.changeRequestById.testingTimeSheetsByDate.map(item => {\r\n                                return { date: new Date(item.date).getTime(), timeSpentCumsum: item.timeSpentCumsum }\r\n                            })\r\n                        }\r\n                        line fill=\"blue\"\r\n                    />\r\n                </ScatterChart>\r\n\r\n                <ul>\r\n                    { this.props.data.changeRequestById.systemChangeRequests\r\n                        .slice()\r\n                        .sort(function(a, b) {\r\n                            if (a.stateCategory.id === 3 && b.stateCategory.id !== 3) {\r\n                                return 1;\r\n                            }\r\n                            if (a.stateCategory.id === 3 && b.stateCategory.id === 3) {\r\n                                return 0;\r\n                            }\r\n                            if (a.stateCategory.id !== 3 && b.stateCategory.id === 3) {\r\n                                return -1;\r\n                            }\r\n\r\n                            return b.timeLeft - a.timeLeft\r\n                        })\r\n                        .map(systemChangeRequest => (\r\n                            <li key={systemChangeRequest.id}>\r\n                                { systemChangeRequest.stateCategory.id !== 3 ? `Осталось ${systemChangeRequest.timeLeft} ч ` : '' }\r\n                                { systemChangeRequest.estimate === 0 && systemChangeRequest.stateCategory.id !== 3 ? `Оценка ${systemChangeRequest.estimate} ч ` : '' }\r\n\r\n                                <RouterLink style={{ textDecoration: systemChangeRequest.stateCategory.id === 3 ? 'line-through' : 'none' }} to={ `/systemChangeRequests/${systemChangeRequest.id}` }>\r\n                                    {systemChangeRequest.name}\r\n                                </RouterLink>\r\n                            </li>\r\n                        )\r\n                    )}\r\n                </ul>\r\n            </Box>\r\n        );\r\n    }\r\n}\r\n\r\nexport default graphql(fetchChangeRequest, {\r\n    options: (props) => { return { variables: { id: props.match.params.id }}}\r\n})(ChangeRequestDetail);"]},"metadata":{},"sourceType":"module"}