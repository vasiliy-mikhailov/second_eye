{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikhaylovv\\\\PycharmProjects\\\\second_eye\\\\client\\\\src\\\\components\\\\DedicatedTeamInPlanningPeriodDetail.js\";\nimport React, { Component } from \"react\";\nimport { gql } from '@apollo/client';\nimport { graphql } from '@apollo/client/react/hoc';\nimport Typography from '@material-ui/core/Typography';\nimport { Box, Link } from \"@material-ui/core\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchDedicatedTeamByIdAndPlanningPeriod = gql`\n    query PlanningPeriodByIdQuery($id: String!) {\n        planningPeriodById(id: $id) {\n            id \n            name\n            \n            dedicatedTeams {\n                id\n                name\n            }\n        }\n    }\n`;\n\nclass DedicatedTeamInPlanningPeriodDetail extends Component {\n  render() {\n    if (this.props.data.loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 47\n      }, this);\n    }\n\n    const planningPeriodId = this.props.match.params.id;\n    const planningPeriod = this.props.data.planningPeriodById;\n    const dedicatedTeams = planningPeriod.dedicatedTeams;\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        noWrap: true,\n        children: \"\\u0417\\u0430\\u044F\\u0432\\u043A\\u0438 \\u043D\\u0430 \\u0434\\u043E\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: dedicatedTeams.slice().sort(function (a, b) {\n          if (a.name > b.name) {\n            return 1;\n          }\n\n          if (a.name === b.name) {\n            return 0;\n          }\n\n          if (a.name < b.name) {\n            return -1;\n          }\n        }).map(dedicatedTeam => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(RouterLink, {\n            to: `/planningPeriods/${planningPeriodId}/dedicatedTeams/${dedicatedTeam.id}`,\n            children: dedicatedTeam.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 33\n          }, this)\n        }, dedicatedTeam.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default graphql(fetchDedicatedTeamByIdAndPlanningPeriod, {\n  options: props => {\n    return {\n      variables: {\n        id: props.match.params.dedicatedTeamId\n      }\n    };\n  }\n})(DedicatedTeamInPlanningPeriodDetail);","map":{"version":3,"sources":["C:/Users/mikhaylovv/PycharmProjects/second_eye/client/src/components/DedicatedTeamInPlanningPeriodDetail.js"],"names":["React","Component","gql","graphql","Typography","Box","Link","RouterLink","fetchDedicatedTeamByIdAndPlanningPeriod","DedicatedTeamInPlanningPeriodDetail","render","props","data","loading","planningPeriodId","match","params","id","planningPeriod","planningPeriodById","dedicatedTeams","slice","sort","a","b","name","map","dedicatedTeam","options","variables","dedicatedTeamId"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,GAAR,QAAkB,gBAAlB;AACA,SAASC,OAAT,QAAwB,0BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAAQC,GAAR,EAAaC,IAAb,QAAwB,mBAAxB;AACA,SAAQA,IAAI,IAAIC,UAAhB,QAAiC,kBAAjC;;AAEA,MAAMC,uCAAuC,GAAGN,GAAI;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;;AAcA,MAAMO,mCAAN,SAAkDR,SAAlD,CAA4D;AACxDS,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,OAApB,EAA6B;AAAE,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AAA+B;;AAE9D,UAAMC,gBAAgB,GAAG,KAAKH,KAAL,CAAWI,KAAX,CAAiBC,MAAjB,CAAwBC,EAAjD;AACA,UAAMC,cAAc,GAAG,KAAKP,KAAL,CAAWC,IAAX,CAAgBO,kBAAvC;AACA,UAAMC,cAAc,GAAGF,cAAc,CAACE,cAAtC;AAEA,wBACI,QAAC,GAAD;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,MAAM,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKG;AAAA,kBACOA,cAAc,CACXC,KADH,GAEGC,IAFH,CAEQ,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACjB,cAAID,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAf,EAAqB;AACjB,mBAAO,CAAP;AACH;;AACD,cAAIF,CAAC,CAACE,IAAF,KAAWD,CAAC,CAACC,IAAjB,EAAuB;AACnB,mBAAO,CAAP;AACH;;AACD,cAAIF,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAf,EAAqB;AACjB,mBAAO,CAAC,CAAR;AACH;AACJ,SAZH,EAaGC,GAbH,CAaOC,aAAa,iBACd;AAAA,iCACI,QAAC,UAAD;AAAY,YAAA,EAAE,EAAI,oBAAmBb,gBAAiB,mBAAkBa,aAAa,CAACV,EAAG,EAAzF;AAAA,sBACEU,aAAa,CAACF;AADhB;AAAA;AAAA;AAAA;AAAA;AADJ,WAAUE,aAAa,CAACV,EAAxB;AAAA;AAAA;AAAA;AAAA,gBAdN;AADP;AAAA;AAAA;AAAA;AAAA,cALH;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA+BH;;AAvCuD;;AA0C5D,eAAed,OAAO,CAACK,uCAAD,EAA0C;AAC5DoB,EAAAA,OAAO,EAAGjB,KAAD,IAAW;AAAE,WAAO;AAAEkB,MAAAA,SAAS,EAAE;AAAEZ,QAAAA,EAAE,EAAEN,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBc;AAAzB;AAAb,KAAP;AAAgE;AAD1B,CAA1C,CAAP,CAEZrB,mCAFY,CAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport {gql} from '@apollo/client';\r\nimport { graphql } from '@apollo/client/react/hoc';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Box, Link} from \"@material-ui/core\";\r\nimport {Link as RouterLink} from \"react-router-dom\";\r\n\r\nconst fetchDedicatedTeamByIdAndPlanningPeriod = gql`\r\n    query PlanningPeriodByIdQuery($id: String!) {\r\n        planningPeriodById(id: $id) {\r\n            id \r\n            name\r\n            \r\n            dedicatedTeams {\r\n                id\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nclass DedicatedTeamInPlanningPeriodDetail extends Component {\r\n    render() {\r\n        if (this.props.data.loading) { return <div>Loading ...</div> }\r\n\r\n        const planningPeriodId = this.props.match.params.id\r\n        const planningPeriod = this.props.data.planningPeriodById\r\n        const dedicatedTeams = planningPeriod.dedicatedTeams\r\n\r\n        return (\r\n            <Box>\r\n                <Typography variant=\"h3\" noWrap>\r\n                    Заявки на доработку\r\n                </Typography>\r\n\r\n               <ul>\r\n                    { dedicatedTeams\r\n                        .slice()\r\n                        .sort(function(a, b) {\r\n                            if (a.name > b.name) {\r\n                                return 1;\r\n                            }\r\n                            if (a.name === b.name) {\r\n                                return 0;\r\n                            }\r\n                            if (a.name < b.name) {\r\n                                return -1;\r\n                            }\r\n                        })\r\n                        .map(dedicatedTeam => (\r\n                            <li key={ dedicatedTeam.id }>\r\n                                <RouterLink to={ `/planningPeriods/${planningPeriodId}/dedicatedTeams/${dedicatedTeam.id}` }>\r\n                                { dedicatedTeam.name }\r\n                                </RouterLink>\r\n                            </li>\r\n                        )\r\n                    )}\r\n                </ul>\r\n            </Box>\r\n        );\r\n    }\r\n}\r\n\r\nexport default graphql(fetchDedicatedTeamByIdAndPlanningPeriod, {\r\n    options: (props) => { return { variables: { id: props.match.params.dedicatedTeamId }}}\r\n})(DedicatedTeamInPlanningPeriodDetail);"]},"metadata":{},"sourceType":"module"}