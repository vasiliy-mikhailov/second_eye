{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikhaylovv\\\\PycharmProjects\\\\second_eye\\\\client\\\\src\\\\components\\\\DedicatedTeamPlanningPeriodDetail.js\";\nimport React, { Component } from \"react\";\nimport { gql } from '@apollo/client';\nimport { graphql } from '@apollo/client/react/hoc';\nimport Typography from '@material-ui/core/Typography';\nimport { Box, Link } from \"@material-ui/core\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchDedicatedTeamPlanningPeriodByPlanningPeriodIdAndDedicatedTeamId = gql`\n    query DedicatedTeamPlanningPeriodByPlanningPeriodIdAndDedicatedTeamId($planningPeriodId: String!, $dedicatedTeamId: String!) {\n          dedicatedTeamPlanningPeriodByPlanningPeriodIdAndDedicatedTeamId(dedicatedTeamId: $dedicatedTeamId, planningPeriodId: $planningPeriodId) {\n                id\n                dedicatedTeam {\n                    name\n                }\n                planningPeriod {\n                    name\n                    start\n                    end\n                }\n                timeSpentPercentWithValueAndWithoutValueByDate {\n                    date\n                    timeSpentWithoutValuePercentCumsum\n                    timeSpentWithValuePercentCumsum\n                }\n                timeSheetsByDate {\n                    date\n                    timeSpentCumsum\n                }\n                changeRequests {\n                    id\n                    estimate\n                    timeLeft\n                    hasValue\n                    name\n                }\n          }\n    }\n`;\n\nclass DedicatedTeamPlanningPeriodDetail extends Component {\n  render() {\n    if (this.props.data.loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 47\n      }, this);\n    }\n\n    const dedicatedTeamPlanningPeriod = this.props.data.dedicatedTeamPlanningPeriodByPlanningPeriodIdAndDedicatedTeamId;\n    const dedicatedTeamName = dedicatedTeamPlanningPeriod.dedicatedTeam.name;\n    const planningPeriodName = dedicatedTeamPlanningPeriod.planningPeriod.name;\n    const planningPeriodStart = dedicatedTeamPlanningPeriod.planningPeriod.start;\n    const planningPeriodEnd = dedicatedTeamPlanningPeriod.planningPeriod.end;\n    const changeRequests = dedicatedTeamPlanningPeriod.changeRequess;\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body\",\n        noWrap: true,\n        children: [\"\\u0412\\u044B\\u0434\\u0435\\u043B\\u0435\\u043D\\u043D\\u0430\\u044F \\u043A\\u043E\\u043C\\u0430\\u043D\\u0434\\u0430 \", dedicatedTeamName, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), \"\\u041F\\u0435\\u0440\\u0438\\u043E\\u0434 \\u043F\\u043B\\u0430\\u043D\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F \", planningPeriodName, \" (\", planningPeriodStart, \"-\", planningPeriodEnd, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body\",\n        noWrap: true,\n        children: \"\\u0417\\u0430\\u044F\\u0432\\u043A\\u0438 \\u043D\\u0430 \\u0434\\u043E\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: changeRequests.slice().sort(function (a, b) {\n          if (a.name > b.name) {\n            return 1;\n          }\n\n          if (a.name === b.name) {\n            return 0;\n          }\n\n          if (a.name < b.name) {\n            return -1;\n          }\n        }).map(changeRequest => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(RouterLink, {\n            to: `/changeRequests/${changeRequest.id}`,\n            children: changeRequest.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 33\n          }, this)\n        }, changeRequest.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default graphql(fetchDedicatedTeamPlanningPeriodByPlanningPeriodIdAndDedicatedTeamId, {\n  options: props => {\n    return {\n      variables: {\n        planningPeriodId: props.match.params.planningPeriodId,\n        dedicatedTeamId: props.match.params.dedicatedTeamId\n      }\n    };\n  }\n})(DedicatedTeamPlanningPeriodDetail);","map":{"version":3,"sources":["C:/Users/mikhaylovv/PycharmProjects/second_eye/client/src/components/DedicatedTeamPlanningPeriodDetail.js"],"names":["React","Component","gql","graphql","Typography","Box","Link","RouterLink","fetchDedicatedTeamPlanningPeriodByPlanningPeriodIdAndDedicatedTeamId","DedicatedTeamPlanningPeriodDetail","render","props","data","loading","dedicatedTeamPlanningPeriod","dedicatedTeamPlanningPeriodByPlanningPeriodIdAndDedicatedTeamId","dedicatedTeamName","dedicatedTeam","name","planningPeriodName","planningPeriod","planningPeriodStart","start","planningPeriodEnd","end","changeRequests","changeRequess","slice","sort","a","b","map","changeRequest","id","options","variables","planningPeriodId","match","params","dedicatedTeamId"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport {gql} from '@apollo/client';\r\nimport { graphql } from '@apollo/client/react/hoc';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Box, Link} from \"@material-ui/core\";\r\nimport {Link as RouterLink} from \"react-router-dom\";\r\n\r\nconst fetchDedicatedTeamPlanningPeriodByPlanningPeriodIdAndDedicatedTeamId = gql`\r\n    query DedicatedTeamPlanningPeriodByPlanningPeriodIdAndDedicatedTeamId($planningPeriodId: String!, $dedicatedTeamId: String!) {\r\n          dedicatedTeamPlanningPeriodByPlanningPeriodIdAndDedicatedTeamId(dedicatedTeamId: $dedicatedTeamId, planningPeriodId: $planningPeriodId) {\r\n                id\r\n                dedicatedTeam {\r\n                    name\r\n                }\r\n                planningPeriod {\r\n                    name\r\n                    start\r\n                    end\r\n                }\r\n                timeSpentPercentWithValueAndWithoutValueByDate {\r\n                    date\r\n                    timeSpentWithoutValuePercentCumsum\r\n                    timeSpentWithValuePercentCumsum\r\n                }\r\n                timeSheetsByDate {\r\n                    date\r\n                    timeSpentCumsum\r\n                }\r\n                changeRequests {\r\n                    id\r\n                    estimate\r\n                    timeLeft\r\n                    hasValue\r\n                    name\r\n                }\r\n          }\r\n    }\r\n`;\r\n\r\nclass DedicatedTeamPlanningPeriodDetail extends Component {\r\n    render() {\r\n        if (this.props.data.loading) { return <div>Loading ...</div> }\r\n\r\n        const dedicatedTeamPlanningPeriod = this.props.data.dedicatedTeamPlanningPeriodByPlanningPeriodIdAndDedicatedTeamId\r\n        const dedicatedTeamName = dedicatedTeamPlanningPeriod.dedicatedTeam.name\r\n        const planningPeriodName = dedicatedTeamPlanningPeriod.planningPeriod.name\r\n        const planningPeriodStart = dedicatedTeamPlanningPeriod.planningPeriod.start\r\n        const planningPeriodEnd = dedicatedTeamPlanningPeriod.planningPeriod.end\r\n        const changeRequests = dedicatedTeamPlanningPeriod.changeRequess\r\n\r\n        return (\r\n            <Box>\r\n                <Typography variant=\"body\" noWrap>\r\n                    Выделенная команда { dedicatedTeamName }\r\n                    <br />\r\n                    Период планирования { planningPeriodName } ({ planningPeriodStart }-{ planningPeriodEnd })\r\n                </Typography>\r\n\r\n                <br />\r\n                <Typography variant=\"body\" noWrap>\r\n                    Заявки на доработку\r\n                </Typography>\r\n\r\n               <ul>\r\n                    { changeRequests\r\n                        .slice()\r\n                        .sort(function(a, b) {\r\n                            if (a.name > b.name) {\r\n                                return 1;\r\n                            }\r\n                            if (a.name === b.name) {\r\n                                return 0;\r\n                            }\r\n                            if (a.name < b.name) {\r\n                                return -1;\r\n                            }\r\n                        })\r\n                        .map(changeRequest => (\r\n                            <li key={ changeRequest.id }>\r\n                                <RouterLink to={ `/changeRequests/${changeRequest.id}` }>\r\n                                { changeRequest.name }\r\n                                </RouterLink>\r\n                            </li>\r\n                        )\r\n                    )}\r\n                </ul>\r\n            </Box>\r\n        );\r\n    }\r\n}\r\n\r\nexport default graphql(fetchDedicatedTeamPlanningPeriodByPlanningPeriodIdAndDedicatedTeamId, {\r\n    options: (props) => { return { variables: { planningPeriodId: props.match.params.planningPeriodId, dedicatedTeamId: props.match.params.dedicatedTeamId }}}\r\n})(DedicatedTeamPlanningPeriodDetail);"]},"metadata":{},"sourceType":"module"}