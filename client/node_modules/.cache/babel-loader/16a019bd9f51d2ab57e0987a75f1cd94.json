{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikhaylovv\\\\PycharmProjects\\\\second_eye\\\\client\\\\src\\\\components\\\\SystemChangeRequestDetail.js\";\nimport React, { Component } from \"react\";\nimport { gql } from '@apollo/client';\nimport { graphql } from '@apollo/client/react/hoc';\nimport Typography from '@material-ui/core/Typography';\nimport { Box, Link } from \"@material-ui/core\";\nimport TimeSheetsByDateIssueChart from './TimeSheetsByDateIssueChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchSystemChangeRequest = gql`\n    query SystemChangeRequestByIdQuery($id: String!) {\n        systemChangeRequestById(id: $id) {\n            id \n            url\n            name\n            state {\n                name\n            }\n            \n            analysisEstimate\n            analysisTimeSpent\n            analysisTimeLeft\n            analysisTimeSheetsByDate {\n                date\n                timeSpentCumsum\n            }\n            \n            developmentEstimate\n            developmentTimeSpent\n            developmentTimeLeft\n            developmentTimeSheetsByDate {\n                date\n                timeSpentCumsum\n            }\n            \n            testingEstimate\n            testingTimeSpent\n            testingTimeLeft\n            testingTimeSheetsByDate {\n                date\n                timeSpentCumsum\n            }\n            \n            estimate\n            effortPerFunctionPoint\n            timeSpent\n            timeLeft\n            timeSheetsByDate {\n                date\n                timeSpentCumsum\n            }\n            \n            changeRequest {\n                plannedInstallDate\n            }\n        }\n    }\n`;\n\nclass SystemChangeRequestDetail extends Component {\n  render() {\n    if (this.props.data.loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 47\n      }, this);\n    }\n\n    const systemChangeRequest = this.props.data.systemChangeRequestById;\n    const changeRequest = systemChangeRequest.changeRequest;\n    const plannedInstallDate = changeRequest.plannedInstallDate ? new Date(changeRequest.plannedInstallDate).getTime() : null;\n    const timeSheetsByDate = systemChangeRequest.timeSheetsByDate;\n    const estimate = systemChangeRequest.estimate;\n    const effortPerFunctionPoint = systemChangeRequest.effortPerFunctionPoint;\n    const analysisTimeSheetsByDate = systemChangeRequest.analysisTimeSheetsByDate;\n    const analysisEstimate = systemChangeRequest.analysisEstimate;\n    const developmentTimeSheetsByDate = systemChangeRequest.developmentTimeSheetsByDate;\n    const developmentEstimate = systemChangeRequest.developmentEstimate;\n    const testingTimeSheetsByDate = systemChangeRequest.testingTimeSheetsByDate;\n    const testingEstimate = systemChangeRequest.testingEstimate;\n    const today = new Date().getTime();\n    const firstTimeSheetDate = timeSheetsByDate.length > 0 ? new Date(timeSheetsByDate[0].date).getTime() : null;\n    const lastTimeSheetDate = timeSheetsByDate.length > 0 ? new Date(timeSheetsByDate[timeSheetsByDate.length - 1].date).getTime() : null;\n    const allEdgeDates = [today];\n\n    if (plannedInstallDate) {\n      allEdgeDates.push(plannedInstallDate);\n    }\n\n    if (firstTimeSheetDate) {\n      allEdgeDates.push(firstTimeSheetDate);\n    }\n\n    if (lastTimeSheetDate) {\n      allEdgeDates.push(lastTimeSheetDate);\n    }\n\n    const xAxisStart = Math.min(...allEdgeDates) - 1000 * 60 * 60 * 24 * 28;\n    const xAxisEnd = Math.max(...allEdgeDates) + 1000 * 60 * 60 * 24 * 28;\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        noWrap: true,\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          href: this.props.location.pathname,\n          children: systemChangeRequest.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), \" \\xA0\", systemChangeRequest.name, \" \\xA0\", systemChangeRequest.state.name, \" \\xA0\", /*#__PURE__*/_jsxDEV(Link, {\n          href: systemChangeRequest.url,\n          children: \"[ \\u0438\\u0441\\u0442\\u043E\\u0447\\u043D\\u0438\\u043A ]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), \"\\u041E\\u0441\\u0442\\u0430\\u043B\\u043E\\u0441\\u044C \", Math.round(systemChangeRequest.timeLeft), \" \\u0447 ( \", (systemChangeRequest.timeLeft / systemChangeRequest.estimate * 100).toFixed(2), \"% ) \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 165\n        }, this), \"\\u0421\\u0434\\u0435\\u043B\\u0430\\u043D\\u043E \", Math.round(systemChangeRequest.timeSpent), \" \\u0447 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 77\n        }, this), \"\\u041E\\u0446\\u0435\\u043D\\u043A\\u0430 \", Math.round(systemChangeRequest.estimate), \" \\u0447 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 75\n        }, this), \"\\u0417\\u0430\\u0442\\u0440\\u0430\\u0442\\u044B \\u043D\\u0430 \\u0444\\u0443\\u043D\\u043A\\u0446\\u0438\\u043E\\u043D\\u0430\\u043B\\u044C\\u043D\\u0443\\u044E \\u0442\\u043E\\u0447\\u043A\\u0443 (\\u0430\\u043D\\u0430\\u043B\\u0438\\u0442\\u0438\\u043A\\u0430 + \\u0440\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0430 + \\u043C\\u0435\\u043D\\u0435\\u0434\\u0436\\u043C\\u0435\\u043D\\u0442) \", effortPerFunctionPoint.toFixed(2), \" \\u0447\\u0430\\u0441\\u043E\\u0432 / \\u0444\\u0443\\u043D\\u043A\\u0446\\u0438\\u043E\\u043D\\u0430\\u043B\\u044C\\u043D\\u0430\\u044F \\u0442\\u043E\\u0447\\u043A\\u0430\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TimeSheetsByDateIssueChart, {\n        plannedInstallDate: plannedInstallDate,\n        title: \"\\u0410\\u043D\\u0430\\u043B\\u0438\\u0442\\u0438\\u043A\\u0430 + \\u0420\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0430 + \\u0422\\u0435\\u0441\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\",\n        xAxisStart: xAxisStart,\n        xAxisEnd: xAxisEnd,\n        color: \"black\",\n        timeSheetsByDate: timeSheetsByDate,\n        estimate: estimate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TimeSheetsByDateIssueChart, {\n        plannedInstallDate: plannedInstallDate,\n        title: \"\\u0410\\u043D\\u0430\\u043B\\u0438\\u0442\\u0438\\u043A\\u0430\",\n        xAxisStart: xAxisStart,\n        xAxisEnd: xAxisEnd,\n        color: \"red\",\n        timeSheetsByDate: analysisTimeSheetsByDate,\n        estimate: analysisEstimate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TimeSheetsByDateIssueChart, {\n        plannedInstallDate: plannedInstallDate,\n        title: \"\\u0420\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0430\",\n        xAxisStart: xAxisStart,\n        xAxisEnd: xAxisEnd,\n        color: \"green\",\n        timeSheetsByDate: developmentTimeSheetsByDate,\n        estimate: developmentEstimate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TimeSheetsByDateIssueChart, {\n        plannedInstallDate: plannedInstallDate,\n        title: \"\\u0422\\u0435\\u0441\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\",\n        xAxisStart: xAxisStart,\n        xAxisEnd: xAxisEnd,\n        color: \"blue\",\n        timeSheetsByDate: testingTimeSheetsByDate,\n        estimate: testingEstimate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default graphql(fetchSystemChangeRequest, {\n  options: props => {\n    return {\n      variables: {\n        id: props.match.params.id\n      }\n    };\n  }\n})(SystemChangeRequestDetail);","map":{"version":3,"sources":["C:/Users/mikhaylovv/PycharmProjects/second_eye/client/src/components/SystemChangeRequestDetail.js"],"names":["React","Component","gql","graphql","Typography","Box","Link","TimeSheetsByDateIssueChart","fetchSystemChangeRequest","SystemChangeRequestDetail","render","props","data","loading","systemChangeRequest","systemChangeRequestById","changeRequest","plannedInstallDate","Date","getTime","timeSheetsByDate","estimate","effortPerFunctionPoint","analysisTimeSheetsByDate","analysisEstimate","developmentTimeSheetsByDate","developmentEstimate","testingTimeSheetsByDate","testingEstimate","today","firstTimeSheetDate","length","date","lastTimeSheetDate","allEdgeDates","push","xAxisStart","Math","min","xAxisEnd","max","location","pathname","id","name","state","url","round","timeLeft","toFixed","timeSpent","options","variables","match","params"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport {gql} from '@apollo/client';\r\nimport { graphql } from '@apollo/client/react/hoc';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Box, Link} from \"@material-ui/core\";\r\nimport TimeSheetsByDateIssueChart from './TimeSheetsByDateIssueChart'\r\n\r\nconst fetchSystemChangeRequest = gql`\r\n    query SystemChangeRequestByIdQuery($id: String!) {\r\n        systemChangeRequestById(id: $id) {\r\n            id \r\n            url\r\n            name\r\n            state {\r\n                name\r\n            }\r\n            \r\n            analysisEstimate\r\n            analysisTimeSpent\r\n            analysisTimeLeft\r\n            analysisTimeSheetsByDate {\r\n                date\r\n                timeSpentCumsum\r\n            }\r\n            \r\n            developmentEstimate\r\n            developmentTimeSpent\r\n            developmentTimeLeft\r\n            developmentTimeSheetsByDate {\r\n                date\r\n                timeSpentCumsum\r\n            }\r\n            \r\n            testingEstimate\r\n            testingTimeSpent\r\n            testingTimeLeft\r\n            testingTimeSheetsByDate {\r\n                date\r\n                timeSpentCumsum\r\n            }\r\n            \r\n            estimate\r\n            effortPerFunctionPoint\r\n            timeSpent\r\n            timeLeft\r\n            timeSheetsByDate {\r\n                date\r\n                timeSpentCumsum\r\n            }\r\n            \r\n            changeRequest {\r\n                plannedInstallDate\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nclass SystemChangeRequestDetail extends Component {\r\n    render() {\r\n        if (this.props.data.loading) { return <div>Loading ...</div> }\r\n\r\n        const systemChangeRequest = this.props.data.systemChangeRequestById\r\n        const changeRequest = systemChangeRequest.changeRequest\r\n        const plannedInstallDate = changeRequest.plannedInstallDate ? new Date(changeRequest.plannedInstallDate).getTime() : null\r\n        const timeSheetsByDate = systemChangeRequest.timeSheetsByDate\r\n        const estimate = systemChangeRequest.estimate\r\n        const effortPerFunctionPoint = systemChangeRequest.effortPerFunctionPoint\r\n\r\n        const analysisTimeSheetsByDate = systemChangeRequest.analysisTimeSheetsByDate\r\n        const analysisEstimate = systemChangeRequest.analysisEstimate\r\n\r\n        const developmentTimeSheetsByDate = systemChangeRequest.developmentTimeSheetsByDate\r\n        const developmentEstimate = systemChangeRequest.developmentEstimate\r\n\r\n        const testingTimeSheetsByDate = systemChangeRequest.testingTimeSheetsByDate\r\n        const testingEstimate = systemChangeRequest.testingEstimate\r\n\r\n        const today = (new Date()).getTime()\r\n        const firstTimeSheetDate = timeSheetsByDate.length > 0 ? new Date(timeSheetsByDate[0].date).getTime() : null\r\n        const lastTimeSheetDate = timeSheetsByDate.length > 0 ? new Date(timeSheetsByDate[timeSheetsByDate.length - 1].date).getTime() : null\r\n\r\n        const allEdgeDates = [today]\r\n        if (plannedInstallDate) {\r\n            allEdgeDates.push(plannedInstallDate)\r\n        }\r\n\r\n        if (firstTimeSheetDate) {\r\n            allEdgeDates.push(firstTimeSheetDate)\r\n        }\r\n\r\n        if (lastTimeSheetDate) {\r\n            allEdgeDates.push(lastTimeSheetDate)\r\n        }\r\n\r\n        const xAxisStart = Math.min(...allEdgeDates) - 1000 * 60 * 60 * 24 * 28\r\n        const xAxisEnd = Math.max(...allEdgeDates) + 1000 * 60 * 60 * 24 * 28\r\n\r\n        return (\r\n            <Box>\r\n                <Typography variant=\"body1\" noWrap>\r\n                    <Link href={ this.props.location.pathname }>\r\n                        { systemChangeRequest.id }\r\n                    </Link> &nbsp;\r\n                    { systemChangeRequest.name } &nbsp;\r\n                    { systemChangeRequest.state.name } &nbsp;\r\n                    <Link href={ systemChangeRequest.url }>\r\n                        [ источник ]\r\n                    </Link>\r\n                    <br />\r\n                    Осталось { Math.round(systemChangeRequest.timeLeft) } ч ( { (systemChangeRequest.timeLeft / systemChangeRequest.estimate * 100).toFixed(2) }% ) <br />\r\n                    Сделано { Math.round(systemChangeRequest.timeSpent) } ч <br />\r\n                    Оценка { Math.round(systemChangeRequest.estimate) } ч <br />\r\n                    Затраты на функциональную точку (аналитика + разработка + менеджмент) { effortPerFunctionPoint.toFixed(2) } часов / функциональная точка\r\n                </Typography>\r\n                <br />\r\n\r\n                <TimeSheetsByDateIssueChart\r\n                    plannedInstallDate={ plannedInstallDate }\r\n                    title=\"Аналитика + Разработка + Тестирование\"\r\n                    xAxisStart={ xAxisStart }\r\n                    xAxisEnd={ xAxisEnd }\r\n                    color=\"black\"\r\n                    timeSheetsByDate={ timeSheetsByDate }\r\n                    estimate={ estimate }\r\n                />\r\n\r\n                <TimeSheetsByDateIssueChart\r\n                    plannedInstallDate={ plannedInstallDate }\r\n                    title=\"Аналитика\"\r\n                    xAxisStart={ xAxisStart }\r\n                    xAxisEnd={ xAxisEnd }\r\n                    color=\"red\"\r\n                    timeSheetsByDate={ analysisTimeSheetsByDate }\r\n                    estimate={ analysisEstimate }\r\n                />\r\n\r\n                <TimeSheetsByDateIssueChart\r\n                    plannedInstallDate={ plannedInstallDate }\r\n                    title=\"Разработка\"\r\n                    xAxisStart={ xAxisStart }\r\n                    xAxisEnd={ xAxisEnd }\r\n                    color=\"green\"\r\n                    timeSheetsByDate={ developmentTimeSheetsByDate }\r\n                    estimate={ developmentEstimate }\r\n                />\r\n\r\n                <TimeSheetsByDateIssueChart\r\n                    plannedInstallDate={ plannedInstallDate }\r\n                    title=\"Тестирование\"\r\n                    xAxisStart={ xAxisStart }\r\n                    xAxisEnd={ xAxisEnd }\r\n                    color=\"blue\"\r\n                    timeSheetsByDate={ testingTimeSheetsByDate }\r\n                    estimate={ testingEstimate }\r\n                />\r\n            </Box>\r\n        );\r\n    }\r\n}\r\n\r\nexport default graphql(fetchSystemChangeRequest, {\r\n    options: (props) => { return { variables: { id: props.match.params.id }}}\r\n})(SystemChangeRequestDetail);"]},"metadata":{},"sourceType":"module"}