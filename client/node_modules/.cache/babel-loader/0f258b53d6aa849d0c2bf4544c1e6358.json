{"ast":null,"code":"import _classCallCheck from\"C:/Users/mikhaylovv/PycharmProjects/second_eye/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/mikhaylovv/PycharmProjects/second_eye/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/mikhaylovv/PycharmProjects/second_eye/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/mikhaylovv/PycharmProjects/second_eye/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _taggedTemplateLiteral from\"C:/Users/mikhaylovv/PycharmProjects/second_eye/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{Component}from\"react\";import{gql}from'@apollo/client';import{graphql}from'@apollo/client/react/hoc';import Typography from'@material-ui/core/Typography';import{Box}from\"@material-ui/core\";import{Link as RouterLink}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var fetchPlanningPeriods=gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    query PlanningPeriods {\\n        planningPeriods {\\n            id \\n            name\\n            start\\n            end\\n        }\\n    }\\n\"])));var PlanningPeriodsList=/*#__PURE__*/function(_Component){_inherits(PlanningPeriodsList,_Component);var _super=_createSuper(PlanningPeriodsList);function PlanningPeriodsList(){_classCallCheck(this,PlanningPeriodsList);return _super.apply(this,arguments);}_createClass(PlanningPeriodsList,[{key:\"render\",value:function render(){if(this.props.data.loading){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading ...\"});}var planningPeriods=this.props.data.planningPeriods;return/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h3\",children:\"\\u041F\\u0435\\u0440\\u0438\\u043E\\u0434\\u044B\"}),/*#__PURE__*/_jsx(\"ul\",{children:planningPeriods.slice().sort(function(a,b){if(a.start<b.start){return 1;}if(a.start===b.start){return 0;}if(a.start>b.start){return-1;}}).map(function(planningPeriod){return/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(RouterLink,{to:\"/planningPeriods/\".concat(planningPeriod.id),children:planningPeriod.name}),\"\\xA0 (\",planningPeriod.start,\" - \",planningPeriod.end,\")\"]},planningPeriod.id);})})]});}}]);return PlanningPeriodsList;}(Component);export default graphql(fetchPlanningPeriods)(PlanningPeriodsList);","map":{"version":3,"sources":["C:/Users/mikhaylovv/PycharmProjects/second_eye/client/src/components/PlanningPeriodsList.js"],"names":["React","Component","gql","graphql","Typography","Box","Link","RouterLink","fetchPlanningPeriods","PlanningPeriodsList","props","data","loading","planningPeriods","slice","sort","a","b","start","map","planningPeriod","id","name","end"],"mappings":"g3BAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,OAAQC,GAAR,KAAkB,gBAAlB,CACA,OAASC,OAAT,KAAwB,0BAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,OAAQC,GAAR,KAAkB,mBAAlB,CACA,OAAQC,IAAI,GAAIC,CAAAA,UAAhB,KAAiC,kBAAjC,C,wFAEA,GAAMC,CAAAA,oBAAoB,CAAGN,GAAH,oNAA1B,C,GAWMO,CAAAA,mB,8RACF,iBAAS,CACL,GAAI,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,OAApB,CAA6B,CAAE,mBAAO,oCAAP,CAA+B,CAE9D,GAAMC,CAAAA,eAAe,CAAG,KAAKH,KAAL,CAAWC,IAAX,CAAgBE,eAAxC,CAEA,mBACI,MAAC,GAAD,yBACI,KAAC,UAAD,EAAY,OAAO,CAAC,IAApB,wDADJ,cAKI,oBACMA,eAAe,CACZC,KADH,GAEGC,IAFH,CAEQ,SAASC,CAAT,CAAYC,CAAZ,CAAe,CACjB,GAAID,CAAC,CAACE,KAAF,CAAUD,CAAC,CAACC,KAAhB,CAAuB,CACnB,MAAO,EAAP,CACH,CACD,GAAIF,CAAC,CAACE,KAAF,GAAYD,CAAC,CAACC,KAAlB,CAAyB,CACrB,MAAO,EAAP,CACH,CACD,GAAIF,CAAC,CAACE,KAAF,CAAUD,CAAC,CAACC,KAAhB,CAAuB,CACnB,MAAO,CAAC,CAAR,CACH,CACJ,CAZH,EAaGC,GAbH,CAaO,SAAAC,cAAc,qBACf,mCACI,KAAC,UAAD,EAAY,EAAE,4BAAuBA,cAAc,CAACC,EAAtC,CAAd,UACED,cAAc,CAACE,IADjB,EADJ,UAKOF,cAAc,CAACF,KALtB,OAKkCE,cAAc,CAACG,GALjD,OAAUH,cAAc,CAACC,EAAzB,CADe,EAbrB,CADN,EALJ,GADJ,CAiCH,C,iCAvC6BpB,S,EA0ClC,cAAeE,CAAAA,OAAO,CAACK,oBAAD,CAAP,CAA8BC,mBAA9B,CAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport {gql} from '@apollo/client';\r\nimport { graphql } from '@apollo/client/react/hoc';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Box} from \"@material-ui/core\";\r\nimport {Link as RouterLink} from \"react-router-dom\";\r\n\r\nconst fetchPlanningPeriods = gql`\r\n    query PlanningPeriods {\r\n        planningPeriods {\r\n            id \r\n            name\r\n            start\r\n            end\r\n        }\r\n    }\r\n`;\r\n\r\nclass PlanningPeriodsList extends Component {\r\n    render() {\r\n        if (this.props.data.loading) { return <div>Loading ...</div> }\r\n\r\n        const planningPeriods = this.props.data.planningPeriods\r\n\r\n        return (\r\n            <Box>\r\n                <Typography variant=\"h3\">\r\n                    Периоды\r\n                </Typography>\r\n\r\n                <ul>\r\n                    { planningPeriods\r\n                        .slice()\r\n                        .sort(function(a, b) {\r\n                            if (a.start < b.start) {\r\n                                return 1;\r\n                            }\r\n                            if (a.start === b.start) {\r\n                                return 0;\r\n                            }\r\n                            if (a.start > b.start) {\r\n                                return -1;\r\n                            }\r\n                        })\r\n                        .map(planningPeriod => (\r\n                            <li key={ planningPeriod.id }>\r\n                                <RouterLink to={ `/planningPeriods/${planningPeriod.id}` }>\r\n                                { planningPeriod.name }\r\n                                </RouterLink>\r\n                                &nbsp;\r\n                                ({ planningPeriod.start } - { planningPeriod.end })\r\n                            </li>\r\n                        )\r\n                    )}\r\n                </ul>\r\n            </Box>\r\n        );\r\n    }\r\n}\r\n\r\nexport default graphql(fetchPlanningPeriods)(PlanningPeriodsList);"]},"metadata":{},"sourceType":"module"}