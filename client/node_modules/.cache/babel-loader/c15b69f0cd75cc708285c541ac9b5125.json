{"ast":null,"code":"import { fill, isThenable, loadModule, logger } from '@sentry/utils';\n/** Tracing integration for node-postgres package */\n\nvar Postgres = function () {\n  function Postgres() {\n    /**\n     * @inheritDoc\n     */\n    this.name = Postgres.id;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  Postgres.prototype.setupOnce = function (_, getCurrentHub) {\n    var pkg = loadModule('pg');\n\n    if (!pkg) {\n      logger.error('Postgres Integration was unable to require `pg` package.');\n      return;\n    }\n    /**\n     * function (query, callback) => void\n     * function (query, params, callback) => void\n     * function (query) => Promise\n     * function (query, params) => Promise\n     * function (pg.Cursor) => pg.Cursor\n     */\n\n\n    fill(pkg.Client.prototype, 'query', function (orig) {\n      return function (config, values, callback) {\n        var _a, _b, _c;\n\n        var scope = getCurrentHub().getScope();\n        var parentSpan = (_a = scope) === null || _a === void 0 ? void 0 : _a.getSpan();\n        var span = (_b = parentSpan) === null || _b === void 0 ? void 0 : _b.startChild({\n          description: typeof config === 'string' ? config : config.text,\n          op: \"db\"\n        });\n\n        if (typeof callback === 'function') {\n          return orig.call(this, config, values, function (err, result) {\n            var _a;\n\n            (_a = span) === null || _a === void 0 ? void 0 : _a.finish();\n            callback(err, result);\n          });\n        }\n\n        if (typeof values === 'function') {\n          return orig.call(this, config, function (err, result) {\n            var _a;\n\n            (_a = span) === null || _a === void 0 ? void 0 : _a.finish();\n            values(err, result);\n          });\n        }\n\n        var rv = typeof values !== 'undefined' ? orig.call(this, config, values) : orig.call(this, config);\n\n        if (isThenable(rv)) {\n          return rv.then(function (res) {\n            var _a;\n\n            (_a = span) === null || _a === void 0 ? void 0 : _a.finish();\n            return res;\n          });\n        }\n\n        (_c = span) === null || _c === void 0 ? void 0 : _c.finish();\n        return rv;\n      };\n    });\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Postgres.id = 'Postgres';\n  return Postgres;\n}();\n\nexport { Postgres };","map":{"version":3,"sources":["../../src/integrations/postgres.ts"],"names":[],"mappings":"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","sourcesContent":["import { Hub } from '@sentry/hub';\nimport { EventProcessor, Integration } from '@sentry/types';\nimport { fill, isThenable, loadModule, logger } from '@sentry/utils';\n\ninterface PgClient {\n  prototype: {\n    query: () => void | Promise<unknown>;\n  };\n}\n\n/** Tracing integration for node-postgres package */\nexport class Postgres implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Postgres';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Postgres.id;\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    const pkg = loadModule<{ Client: PgClient }>('pg');\n\n    if (!pkg) {\n      logger.error('Postgres Integration was unable to require `pg` package.');\n      return;\n    }\n\n    /**\n     * function (query, callback) => void\n     * function (query, params, callback) => void\n     * function (query) => Promise\n     * function (query, params) => Promise\n     * function (pg.Cursor) => pg.Cursor\n     */\n    fill(pkg.Client.prototype, 'query', function(orig: () => void | Promise<unknown>) {\n      return function(this: unknown, config: unknown, values: unknown, callback: unknown) {\n        const scope = getCurrentHub().getScope();\n        const parentSpan = scope?.getSpan();\n        const span = parentSpan?.startChild({\n          description: typeof config === 'string' ? config : (config as { text: string }).text,\n          op: `db`,\n        });\n\n        if (typeof callback === 'function') {\n          return orig.call(this, config, values, function(err: Error, result: unknown) {\n            span?.finish();\n            callback(err, result);\n          });\n        }\n\n        if (typeof values === 'function') {\n          return orig.call(this, config, function(err: Error, result: unknown) {\n            span?.finish();\n            values(err, result);\n          });\n        }\n\n        const rv = typeof values !== 'undefined' ? orig.call(this, config, values) : orig.call(this, config);\n\n        if (isThenable(rv)) {\n          return (rv as Promise<unknown>).then((res: unknown) => {\n            span?.finish();\n            return res;\n          });\n        }\n\n        span?.finish();\n        return rv;\n      };\n    });\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}