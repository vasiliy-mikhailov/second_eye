{"ast":null,"code":"import * as PropTypes from 'prop-types';\nimport { useSubscription } from \"../hooks/index.js\";\nexport function Subscription(props) {\n  var result = useSubscription(props.subscription, props);\n  return props.children && result ? props.children(result) : null;\n}\nSubscription.propTypes = {\n  subscription: PropTypes.object.isRequired,\n  variables: PropTypes.object,\n  children: PropTypes.func,\n  onSubscriptionData: PropTypes.func,\n  onSubscriptionComplete: PropTypes.func,\n  shouldResubscribe: PropTypes.oneOfType([PropTypes.func, PropTypes.bool])\n};","map":{"version":3,"sources":["../../../src/react/components/Subscription.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,SAAZ,MAA2B,YAA3B;AAIA,SAAS,eAAT,QAAgC,mBAAhC;AAEA,OAAM,SAAU,YAAV,CACJ,KADI,EACkD;AAEtD,MAAM,MAAM,GAAG,eAAe,CAAC,KAAK,CAAC,YAAP,EAAqB,KAArB,CAA9B;AACA,SAAO,KAAK,CAAC,QAAN,IAAkB,MAAlB,GAA2B,KAAK,CAAC,QAAN,CAAe,MAAf,CAA3B,GAAoD,IAA3D;AACD;AAMD,YAAY,CAAC,SAAb,GAAyB;AACvB,EAAA,YAAY,EAAE,SAAS,CAAC,MAAV,CAAiB,UADR;AAEvB,EAAA,SAAS,EAAE,SAAS,CAAC,MAFE;AAGvB,EAAA,QAAQ,EAAE,SAAS,CAAC,IAHG;AAIvB,EAAA,kBAAkB,EAAE,SAAS,CAAC,IAJP;AAKvB,EAAA,sBAAsB,EAAE,SAAS,CAAC,IALX;AAMvB,EAAA,iBAAiB,EAAE,SAAS,CAAC,SAAV,CAAoB,CAAC,SAAS,CAAC,IAAX,EAAiB,SAAS,CAAC,IAA3B,CAApB;AANI,CAAzB","sourcesContent":["import * as PropTypes from 'prop-types';\n\nimport { OperationVariables } from '../../core';\nimport { SubscriptionComponentOptions } from './types';\nimport { useSubscription } from '../hooks';\n\nexport function Subscription<TData = any, TVariables = OperationVariables>(\n  props: SubscriptionComponentOptions<TData, TVariables>\n) {\n  const result = useSubscription(props.subscription, props);\n  return props.children && result ? props.children(result) : null;\n}\n\nexport interface Subscription<TData, TVariables> {\n  propTypes: PropTypes.InferProps<SubscriptionComponentOptions<TData, TVariables>>;\n}\n\nSubscription.propTypes = {\n  subscription: PropTypes.object.isRequired,\n  variables: PropTypes.object,\n  children: PropTypes.func,\n  onSubscriptionData: PropTypes.func,\n  onSubscriptionComplete: PropTypes.func,\n  shouldResubscribe: PropTypes.oneOfType([PropTypes.func, PropTypes.bool])\n} as Subscription<any, any>[\"propTypes\"];\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}