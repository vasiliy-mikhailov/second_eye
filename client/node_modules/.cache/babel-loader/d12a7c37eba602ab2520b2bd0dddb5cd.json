{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikhaylovv\\\\PycharmProjects\\\\second_eye\\\\client\\\\src\\\\components\\\\ChangeRequestDetail.js\";\nimport React, { Component } from \"react\";\nimport { gql } from '@apollo/client';\nimport { graphql } from '@apollo/client/react/hoc';\nimport moment from 'moment';\nimport Typography from '@material-ui/core/Typography';\nimport { Link as RouterLink, NavLink } from \"react-router-dom\";\nimport { Box, Link } from \"@material-ui/core\";\nimport TimeSheetsByDateIssueChart from './TimeSheetsByDateIssueChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchChangeRequest = gql`\n    query ChangeRequestByIdQuery($id: String!) {\n        changeRequestById(id: $id) {\n            id \n            url\n            name\n            state {\n                name\n            }\n            \n            analysisEstimate\n            analysisTimeSpent\n            analysisTimeLeft\n            analysisTimeSheetsByDate {\n                date\n                timeSpentCumsum\n            }\n            \n            developmentEstimate\n            developmentTimeSpent\n            developmentTimeLeft\n            developmentTimeSheetsByDate {\n                date\n                timeSpentCumsum\n            }\n            \n            testingEstimate\n            testingTimeSpent\n            testingTimeLeft\n            testingTimeSheetsByDate {\n                date\n                timeSpentCumsum\n            }\n            \n            estimate\n            effortPerFunctionPoint\n            timeSpent\n            timeLeft\n            timeSheetsByDate {\n                date\n                timeSpentCumsum\n            }\n            \n            plannedInstallDate\n            \n            systemChangeRequests {\n                id\n                name\n                \n                estimate\n                timeLeft\n                state {\n                    name\n                }\n                stateCategory {\n                    id\n                }\n            }\n        }\n    }\n`;\n\nclass ChangeRequestDetail extends Component {\n  render() {\n    if (this.props.data.loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 47\n      }, this);\n    }\n\n    const changeRequest = this.props.data.changeRequestById;\n    const plannedInstallDate = changeRequest.plannedInstallDate ? new Date(changeRequest.plannedInstallDate).getTime() : null;\n    const timeSheetsByDate = changeRequest.timeSheetsByDate;\n    const estimate = changeRequest.estimate;\n    const effortPerFunctionPoint = changeRequest.effortPerFunctionPoint;\n    const analysisTimeSheetsByDate = changeRequest.analysisTimeSheetsByDate;\n    const analysisEstimate = changeRequest.analysisEstimate;\n    const developmentTimeSheetsByDate = changeRequest.developmentTimeSheetsByDate;\n    const developmentEstimate = changeRequest.developmentEstimate;\n    const testingTimeSheetsByDate = changeRequest.testingTimeSheetsByDate;\n    const testingEstimate = changeRequest.testingEstimate;\n    const today = new Date().getTime();\n    const firstTimeSheetDate = timeSheetsByDate.length > 0 ? new Date(timeSheetsByDate[0].date).getTime() : null;\n    const lastTimeSheetDate = timeSheetsByDate.length > 0 ? new Date(timeSheetsByDate[timeSheetsByDate.length - 1].date).getTime() : null;\n    const allEdgeDates = [today];\n\n    if (plannedInstallDate) {\n      allEdgeDates.push(plannedInstallDate);\n    }\n\n    if (firstTimeSheetDate) {\n      allEdgeDates.push(firstTimeSheetDate);\n    }\n\n    if (lastTimeSheetDate) {\n      allEdgeDates.push(lastTimeSheetDate);\n    }\n\n    const xAxisStart = Math.min(...allEdgeDates) - 1000 * 60 * 60 * 24 * 28;\n    const xAxisEnd = Math.max(...allEdgeDates) + 1000 * 60 * 60 * 24 * 28;\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        noWrap: true,\n        children: [/*#__PURE__*/_jsxDEV(NavLink, {\n          to: this.props.location.pathname,\n          children: changeRequest.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), \" \\xA0\", changeRequest.name, \" \\xA0\", changeRequest.state.name, \" \\xA0\", /*#__PURE__*/_jsxDEV(Link, {\n          href: changeRequest.url,\n          children: \"[ \\u0438\\u0441\\u0442\\u043E\\u0447\\u043D\\u0438\\u043A ]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), \"\\u041E\\u0441\\u0442\\u0430\\u043B\\u043E\\u0441\\u044C \", Math.round(changeRequest.timeLeft), \" \\u0447 ( \", (changeRequest.timeLeft / changeRequest.estimate * 100).toFixed(2), \"% ) \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 147\n        }, this), \"\\u0421\\u0434\\u0435\\u043B\\u0430\\u043D\\u043E \", Math.round(changeRequest.timeSpent), \" \\u0447 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 71\n        }, this), \"\\u041E\\u0446\\u0435\\u043D\\u043A\\u0430 \", Math.round(changeRequest.estimate), \" \\u0447 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 69\n        }, this), \"\\u041F\\u043B\\u0430\\u043D\\u043E\\u0432\\u0430\\u044F \\u0434\\u0430\\u0442\\u0430 \\u0443\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043A\\u0438 \", plannedInstallDate ? moment(plannedInstallDate).format(\"YYYY-MM-DD\") : \"не указана\", \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 132\n        }, this), \"\\u0417\\u0430\\u0442\\u0440\\u0430\\u0442\\u044B \\u043D\\u0430 \\u0444\\u0443\\u043D\\u043A\\u0446\\u0438\\u043E\\u043D\\u0430\\u043B\\u044C\\u043D\\u0443\\u044E \\u0442\\u043E\\u0447\\u043A\\u0443 (\\u0430\\u043D\\u0430\\u043B\\u0438\\u0442\\u0438\\u043A\\u0430 + \\u0440\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0430 + \\u043C\\u0435\\u043D\\u0435\\u0434\\u0436\\u043C\\u0435\\u043D\\u0442) \", effortPerFunctionPoint.toFixed(2), \" \\u0447\\u0430\\u0441\\u043E\\u0432 / \\u0444\\u0443\\u043D\\u043A\\u0446\\u0438\\u043E\\u043D\\u0430\\u043B\\u044C\\u043D\\u0430\\u044F \\u0442\\u043E\\u0447\\u043A\\u0430\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TimeSheetsByDateIssueChart, {\n        plannedInstallDate: plannedInstallDate,\n        title: \"\\u0410\\u043D\\u0430\\u043B\\u0438\\u0442\\u0438\\u043A\\u0430 + \\u0420\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0430 + \\u0422\\u0435\\u0441\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\",\n        xAxisStart: xAxisStart,\n        xAxisEnd: xAxisEnd,\n        color: \"black\",\n        timeSheetsByDate: timeSheetsByDate,\n        estimate: estimate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TimeSheetsByDateIssueChart, {\n        plannedInstallDate: plannedInstallDate,\n        title: \"\\u0410\\u043D\\u0430\\u043B\\u0438\\u0442\\u0438\\u043A\\u0430\",\n        xAxisStart: xAxisStart,\n        xAxisEnd: xAxisEnd,\n        color: \"red\",\n        timeSheetsByDate: analysisTimeSheetsByDate,\n        estimate: analysisEstimate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TimeSheetsByDateIssueChart, {\n        plannedInstallDate: plannedInstallDate,\n        title: \"\\u0420\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0430\",\n        xAxisStart: xAxisStart,\n        xAxisEnd: xAxisEnd,\n        color: \"green\",\n        timeSheetsByDate: developmentTimeSheetsByDate,\n        estimate: developmentEstimate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TimeSheetsByDateIssueChart, {\n        plannedInstallDate: plannedInstallDate,\n        title: \"\\u0422\\u0435\\u0441\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\",\n        xAxisStart: xAxisStart,\n        xAxisEnd: xAxisEnd,\n        color: \"blue\",\n        timeSheetsByDate: testingTimeSheetsByDate,\n        estimate: testingEstimate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: changeRequest.systemChangeRequests.slice().sort(function (a, b) {\n          if (a.stateCategory.id === 3 && b.stateCategory.id !== 3) {\n            return 1;\n          }\n\n          if (a.stateCategory.id === 3 && b.stateCategory.id === 3) {\n            return 0;\n          }\n\n          if (a.stateCategory.id !== 3 && b.stateCategory.id === 3) {\n            return -1;\n          }\n\n          return b.timeLeft - a.timeLeft;\n        }).map(systemChangeRequest => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [systemChangeRequest.stateCategory.id !== 3 ? `Осталось ${Math.round(systemChangeRequest.timeLeft)} ч ` : '', systemChangeRequest.estimate === 0 && systemChangeRequest.stateCategory.id !== 3 ? `Оценка ${Math.round(systemChangeRequest.estimate)} ч ` : '', /*#__PURE__*/_jsxDEV(RouterLink, {\n            style: {\n              textDecoration: systemChangeRequest.stateCategory.id === 3 ? 'line-through' : 'none'\n            },\n            to: `/systemChangeRequests/${systemChangeRequest.id}`,\n            children: [systemChangeRequest.id, \" \\xA0\", systemChangeRequest.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 33\n          }, this)]\n        }, systemChangeRequest.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default graphql(fetchChangeRequest, {\n  options: props => {\n    return {\n      variables: {\n        id: props.match.params.id\n      }\n    };\n  }\n})(ChangeRequestDetail);","map":{"version":3,"sources":["C:/Users/mikhaylovv/PycharmProjects/second_eye/client/src/components/ChangeRequestDetail.js"],"names":["React","Component","gql","graphql","moment","Typography","Link","RouterLink","NavLink","Box","TimeSheetsByDateIssueChart","fetchChangeRequest","ChangeRequestDetail","render","props","data","loading","changeRequest","changeRequestById","plannedInstallDate","Date","getTime","timeSheetsByDate","estimate","effortPerFunctionPoint","analysisTimeSheetsByDate","analysisEstimate","developmentTimeSheetsByDate","developmentEstimate","testingTimeSheetsByDate","testingEstimate","today","firstTimeSheetDate","length","date","lastTimeSheetDate","allEdgeDates","push","xAxisStart","Math","min","xAxisEnd","max","location","pathname","id","name","state","url","round","timeLeft","toFixed","timeSpent","format","systemChangeRequests","slice","sort","a","b","stateCategory","map","systemChangeRequest","textDecoration","options","variables","match","params"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport {gql} from '@apollo/client';\r\nimport {graphql} from '@apollo/client/react/hoc';\r\nimport moment from 'moment';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Link as RouterLink, NavLink} from \"react-router-dom\"\r\nimport {Box, Link} from \"@material-ui/core\";\r\nimport TimeSheetsByDateIssueChart from './TimeSheetsByDateIssueChart'\r\n\r\nconst fetchChangeRequest = gql`\r\n    query ChangeRequestByIdQuery($id: String!) {\r\n        changeRequestById(id: $id) {\r\n            id \r\n            url\r\n            name\r\n            state {\r\n                name\r\n            }\r\n            \r\n            analysisEstimate\r\n            analysisTimeSpent\r\n            analysisTimeLeft\r\n            analysisTimeSheetsByDate {\r\n                date\r\n                timeSpentCumsum\r\n            }\r\n            \r\n            developmentEstimate\r\n            developmentTimeSpent\r\n            developmentTimeLeft\r\n            developmentTimeSheetsByDate {\r\n                date\r\n                timeSpentCumsum\r\n            }\r\n            \r\n            testingEstimate\r\n            testingTimeSpent\r\n            testingTimeLeft\r\n            testingTimeSheetsByDate {\r\n                date\r\n                timeSpentCumsum\r\n            }\r\n            \r\n            estimate\r\n            effortPerFunctionPoint\r\n            timeSpent\r\n            timeLeft\r\n            timeSheetsByDate {\r\n                date\r\n                timeSpentCumsum\r\n            }\r\n            \r\n            plannedInstallDate\r\n            \r\n            systemChangeRequests {\r\n                id\r\n                name\r\n                \r\n                estimate\r\n                timeLeft\r\n                state {\r\n                    name\r\n                }\r\n                stateCategory {\r\n                    id\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nclass ChangeRequestDetail extends Component {\r\n    render() {\r\n        if (this.props.data.loading) { return <div>Loading ...</div> }\r\n\r\n        const changeRequest = this.props.data.changeRequestById\r\n\r\n        const plannedInstallDate = changeRequest.plannedInstallDate ? new Date(changeRequest.plannedInstallDate).getTime() : null\r\n        const timeSheetsByDate = changeRequest.timeSheetsByDate\r\n        const estimate = changeRequest.estimate\r\n        const effortPerFunctionPoint = changeRequest.effortPerFunctionPoint\r\n\r\n        const analysisTimeSheetsByDate = changeRequest.analysisTimeSheetsByDate\r\n        const analysisEstimate = changeRequest.analysisEstimate\r\n\r\n        const developmentTimeSheetsByDate = changeRequest.developmentTimeSheetsByDate\r\n        const developmentEstimate = changeRequest.developmentEstimate\r\n\r\n        const testingTimeSheetsByDate = changeRequest.testingTimeSheetsByDate\r\n        const testingEstimate = changeRequest.testingEstimate\r\n\r\n        const today = (new Date()).getTime()\r\n        const firstTimeSheetDate = timeSheetsByDate.length > 0 ? new Date(timeSheetsByDate[0].date).getTime() : null\r\n        const lastTimeSheetDate = timeSheetsByDate.length > 0 ? new Date(timeSheetsByDate[timeSheetsByDate.length - 1].date).getTime() : null\r\n\r\n        const allEdgeDates = [today]\r\n        if (plannedInstallDate) {\r\n            allEdgeDates.push(plannedInstallDate)\r\n        }\r\n\r\n        if (firstTimeSheetDate) {\r\n            allEdgeDates.push(firstTimeSheetDate)\r\n        }\r\n\r\n        if (lastTimeSheetDate) {\r\n            allEdgeDates.push(lastTimeSheetDate)\r\n        }\r\n\r\n        const xAxisStart = Math.min(...allEdgeDates) - 1000 * 60 * 60 * 24 * 28\r\n        const xAxisEnd = Math.max(...allEdgeDates) + 1000 * 60 * 60 * 24 * 28\r\n\r\n        return (\r\n            <Box>\r\n                <Typography variant=\"body1\" noWrap>\r\n                    <NavLink to={ this.props.location.pathname }>\r\n                        { changeRequest.id }\r\n                    </NavLink> &nbsp;\r\n                    { changeRequest.name } &nbsp;\r\n                    { changeRequest.state.name } &nbsp;\r\n                    <Link href={ changeRequest.url }>\r\n                        [ источник ]\r\n                    </Link>\r\n                    <br />\r\n                    Осталось { Math.round(changeRequest.timeLeft) } ч ( { (changeRequest.timeLeft / changeRequest.estimate * 100).toFixed(2) }% ) <br />\r\n                    Сделано { Math.round(changeRequest.timeSpent) } ч <br />\r\n                    Оценка { Math.round(changeRequest.estimate) } ч <br />\r\n                    Плановая дата установки { plannedInstallDate ? moment(plannedInstallDate).format(\"YYYY-MM-DD\") : \"не указана\"} <br />\r\n                    Затраты на функциональную точку (аналитика + разработка + менеджмент) { effortPerFunctionPoint.toFixed(2) } часов / функциональная точка\r\n                    <br />\r\n                </Typography>\r\n                <br />\r\n                <TimeSheetsByDateIssueChart\r\n                    plannedInstallDate={ plannedInstallDate }\r\n                    title=\"Аналитика + Разработка + Тестирование\"\r\n                    xAxisStart={ xAxisStart }\r\n                    xAxisEnd={ xAxisEnd }\r\n                    color=\"black\"\r\n                    timeSheetsByDate={ timeSheetsByDate }\r\n                    estimate={ estimate }\r\n                />\r\n\r\n                <TimeSheetsByDateIssueChart\r\n                    plannedInstallDate={ plannedInstallDate }\r\n                    title=\"Аналитика\"\r\n                    xAxisStart={ xAxisStart }\r\n                    xAxisEnd={ xAxisEnd }\r\n                    color=\"red\"\r\n                    timeSheetsByDate={ analysisTimeSheetsByDate }\r\n                    estimate={ analysisEstimate }\r\n                />\r\n\r\n                <TimeSheetsByDateIssueChart\r\n                    plannedInstallDate={ plannedInstallDate }\r\n                    title=\"Разработка\"\r\n                    xAxisStart={ xAxisStart }\r\n                    xAxisEnd={ xAxisEnd }\r\n                    color=\"green\"\r\n                    timeSheetsByDate={ developmentTimeSheetsByDate }\r\n                    estimate={ developmentEstimate }\r\n                />\r\n\r\n                <TimeSheetsByDateIssueChart\r\n                    plannedInstallDate={ plannedInstallDate }\r\n                    title=\"Тестирование\"\r\n                    xAxisStart={ xAxisStart }\r\n                    xAxisEnd={ xAxisEnd }\r\n                    color=\"blue\"\r\n                    timeSheetsByDate={ testingTimeSheetsByDate }\r\n                    estimate={ testingEstimate }\r\n                />\r\n\r\n                <ul>\r\n                    { changeRequest.systemChangeRequests\r\n                        .slice()\r\n                        .sort(function(a, b) {\r\n                            if (a.stateCategory.id === 3 && b.stateCategory.id !== 3) {\r\n                                return 1;\r\n                            }\r\n                            if (a.stateCategory.id === 3 && b.stateCategory.id === 3) {\r\n                                return 0;\r\n                            }\r\n                            if (a.stateCategory.id !== 3 && b.stateCategory.id === 3) {\r\n                                return -1;\r\n                            }\r\n\r\n                            return b.timeLeft - a.timeLeft\r\n                        })\r\n                        .map(systemChangeRequest => (\r\n                            <li key={systemChangeRequest.id}>\r\n                                { systemChangeRequest.stateCategory.id !== 3 ? `Осталось ${ Math.round(systemChangeRequest.timeLeft) } ч ` : '' }\r\n                                { systemChangeRequest.estimate === 0 && systemChangeRequest.stateCategory.id !== 3 ? `Оценка ${ Math.round(systemChangeRequest.estimate) } ч ` : '' }\r\n\r\n                                <RouterLink style={{ textDecoration: systemChangeRequest.stateCategory.id === 3 ? 'line-through' : 'none' }} to={ `/systemChangeRequests/${systemChangeRequest.id}` }>\r\n                                    { systemChangeRequest.id } &nbsp;\r\n                                    { systemChangeRequest.name }\r\n                                </RouterLink>\r\n                            </li>\r\n                        )\r\n                    )}\r\n                </ul>\r\n            </Box>\r\n        );\r\n    }\r\n}\r\n\r\nexport default graphql(fetchChangeRequest, {\r\n    options: (props) => { return { variables: { id: props.match.params.id }}}\r\n})(ChangeRequestDetail);"]},"metadata":{},"sourceType":"module"}