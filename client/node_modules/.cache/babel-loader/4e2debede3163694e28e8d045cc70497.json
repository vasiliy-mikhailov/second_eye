{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikhaylovv\\\\PycharmProjects\\\\second_eye\\\\client\\\\src\\\\components\\\\DedicatedTeamPlanningPeriodDetail.js\";\nimport React, { Component } from \"react\";\nimport { gql } from '@apollo/client';\nimport { graphql } from '@apollo/client/react/hoc';\nimport Typography from '@material-ui/core/Typography';\nimport { Box, Link } from \"@material-ui/core\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchDedicatedTeamPlanningPeriodByPlanningPeriodIdAndDedicatedTeamId = gql`\n    query DedicatedTeamPlanningPeriodByPlanningPeriodIdAndDedicatedTeamId($planningPeriodId: String!, $dedicatedTeamId: String!) {\n      dedicatedTeamPlanningPeriodByPlanningPeriodIdAndDedicatedTeamId(dedicatedTeamId: $dedicatedTeamId, planningPeriodId: $planningPeriodId) {\n        id\n        dedicatedTeam {\n          name\n        }\n        timeSpentPercentWithValueAndWithoutValueByDate {\n          date\n          timeSpentWithoutValuePercentCumsum\n          timeSpentWithValuePercentCumsum\n        }\n        timeSheetsByDate {\n          date\n          timeSpentCumsum\n        }\n        changeRequests {\n          id\n          estimate\n          timeLeft\n          hasValue\n          name\n        }\n      }\n    }\n    }\n`;\n\nclass DedicatedTeamPlanningPeriodDetail extends Component {\n  render() {\n    if (this.props.data.loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 47\n      }, this);\n    }\n\n    const dedicatedTeamPlanningPeriod = this.props.data.dedicatedTeamPlanningPeriodByPlanningPeriodIdAndDedicatedTeamId;\n    const dedicatedTeamName = dedicatedTeamPlanningPeriod.dedicatedTeam.name;\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        noWrap: true,\n        children: dedicatedTeamName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        noWrap: true,\n        children: \"\\u0417\\u0430\\u044F\\u0432\\u043A\\u0438 \\u043D\\u0430 \\u0434\\u043E\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: dedicatedTeams.slice().sort(function (a, b) {\n          if (a.name > b.name) {\n            return 1;\n          }\n\n          if (a.name === b.name) {\n            return 0;\n          }\n\n          if (a.name < b.name) {\n            return -1;\n          }\n        }).map(dedicatedTeam => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(RouterLink, {\n            to: `/planningPeriods/${planningPeriodId}/dedicatedTeams/${dedicatedTeam.id}`,\n            children: dedicatedTeam.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 33\n          }, this)\n        }, dedicatedTeam.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default graphql(fetchDedicatedTeamPlanningPeriodByPlanningPeriodIdAndDedicatedTeamId, {\n  options: props => {\n    return {\n      variables: {\n        planningPeriodId: props.match.params.planningPeriodId,\n        dedicatedTeamId: props.match.params.dedicatedTeamId\n      }\n    };\n  }\n})(DedicatedTeamPlanningPeriodDetail);","map":{"version":3,"sources":["C:/Users/mikhaylovv/PycharmProjects/second_eye/client/src/components/DedicatedTeamPlanningPeriodDetail.js"],"names":["React","Component","gql","graphql","Typography","Box","Link","RouterLink","fetchDedicatedTeamPlanningPeriodByPlanningPeriodIdAndDedicatedTeamId","DedicatedTeamPlanningPeriodDetail","render","props","data","loading","dedicatedTeamPlanningPeriod","dedicatedTeamPlanningPeriodByPlanningPeriodIdAndDedicatedTeamId","dedicatedTeamName","dedicatedTeam","name","dedicatedTeams","slice","sort","a","b","map","planningPeriodId","id","options","variables","match","params","dedicatedTeamId"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,GAAR,QAAkB,gBAAlB;AACA,SAASC,OAAT,QAAwB,0BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAAQC,GAAR,EAAaC,IAAb,QAAwB,mBAAxB;AACA,SAAQA,IAAI,IAAIC,UAAhB,QAAiC,kBAAjC;;AAEA,MAAMC,oEAAoE,GAAGN,GAAI;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA1BA;;AA4BA,MAAMO,iCAAN,SAAgDR,SAAhD,CAA0D;AACtDS,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,OAApB,EAA6B;AAAE,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AAA+B;;AAE9D,UAAMC,2BAA2B,GAAG,KAAKH,KAAL,CAAWC,IAAX,CAAgBG,+DAApD;AACA,UAAMC,iBAAiB,GAAGF,2BAA2B,CAACG,aAA5B,CAA0CC,IAApE;AAEA,wBACI,QAAC,GAAD;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,MAAM,MAA/B;AAAA,kBACMF;AADN;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,MAAM,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAQG;AAAA,kBACOG,cAAc,CACXC,KADH,GAEGC,IAFH,CAEQ,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACjB,cAAID,CAAC,CAACJ,IAAF,GAASK,CAAC,CAACL,IAAf,EAAqB;AACjB,mBAAO,CAAP;AACH;;AACD,cAAII,CAAC,CAACJ,IAAF,KAAWK,CAAC,CAACL,IAAjB,EAAuB;AACnB,mBAAO,CAAP;AACH;;AACD,cAAII,CAAC,CAACJ,IAAF,GAASK,CAAC,CAACL,IAAf,EAAqB;AACjB,mBAAO,CAAC,CAAR;AACH;AACJ,SAZH,EAaGM,GAbH,CAaOP,aAAa,iBACd;AAAA,iCACI,QAAC,UAAD;AAAY,YAAA,EAAE,EAAI,oBAAmBQ,gBAAiB,mBAAkBR,aAAa,CAACS,EAAG,EAAzF;AAAA,sBACET,aAAa,CAACC;AADhB;AAAA;AAAA;AAAA;AAAA;AADJ,WAAUD,aAAa,CAACS,EAAxB;AAAA;AAAA;AAAA;AAAA,gBAdN;AADP;AAAA;AAAA;AAAA;AAAA,cARH;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAkCH;;AAzCqD;;AA4C1D,eAAevB,OAAO,CAACK,oEAAD,EAAuE;AACzFmB,EAAAA,OAAO,EAAGhB,KAAD,IAAW;AAAE,WAAO;AAAEiB,MAAAA,SAAS,EAAE;AAAEH,QAAAA,gBAAgB,EAAEd,KAAK,CAACkB,KAAN,CAAYC,MAAZ,CAAmBL,gBAAvC;AAAyDM,QAAAA,eAAe,EAAEpB,KAAK,CAACkB,KAAN,CAAYC,MAAZ,CAAmBC;AAA7F;AAAb,KAAP;AAAoI;AADjE,CAAvE,CAAP,CAEZtB,iCAFY,CAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport {gql} from '@apollo/client';\r\nimport { graphql } from '@apollo/client/react/hoc';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Box, Link} from \"@material-ui/core\";\r\nimport {Link as RouterLink} from \"react-router-dom\";\r\n\r\nconst fetchDedicatedTeamPlanningPeriodByPlanningPeriodIdAndDedicatedTeamId = gql`\r\n    query DedicatedTeamPlanningPeriodByPlanningPeriodIdAndDedicatedTeamId($planningPeriodId: String!, $dedicatedTeamId: String!) {\r\n      dedicatedTeamPlanningPeriodByPlanningPeriodIdAndDedicatedTeamId(dedicatedTeamId: $dedicatedTeamId, planningPeriodId: $planningPeriodId) {\r\n        id\r\n        dedicatedTeam {\r\n          name\r\n        }\r\n        timeSpentPercentWithValueAndWithoutValueByDate {\r\n          date\r\n          timeSpentWithoutValuePercentCumsum\r\n          timeSpentWithValuePercentCumsum\r\n        }\r\n        timeSheetsByDate {\r\n          date\r\n          timeSpentCumsum\r\n        }\r\n        changeRequests {\r\n          id\r\n          estimate\r\n          timeLeft\r\n          hasValue\r\n          name\r\n        }\r\n      }\r\n    }\r\n    }\r\n`;\r\n\r\nclass DedicatedTeamPlanningPeriodDetail extends Component {\r\n    render() {\r\n        if (this.props.data.loading) { return <div>Loading ...</div> }\r\n\r\n        const dedicatedTeamPlanningPeriod = this.props.data.dedicatedTeamPlanningPeriodByPlanningPeriodIdAndDedicatedTeamId\r\n        const dedicatedTeamName = dedicatedTeamPlanningPeriod.dedicatedTeam.name\r\n\r\n        return (\r\n            <Box>\r\n                <Typography variant=\"h3\" noWrap>\r\n                    { dedicatedTeamName }\r\n                </Typography>\r\n                <Typography variant=\"h3\" noWrap>\r\n                    Заявки на доработку\r\n                </Typography>\r\n\r\n               <ul>\r\n                    { dedicatedTeams\r\n                        .slice()\r\n                        .sort(function(a, b) {\r\n                            if (a.name > b.name) {\r\n                                return 1;\r\n                            }\r\n                            if (a.name === b.name) {\r\n                                return 0;\r\n                            }\r\n                            if (a.name < b.name) {\r\n                                return -1;\r\n                            }\r\n                        })\r\n                        .map(dedicatedTeam => (\r\n                            <li key={ dedicatedTeam.id }>\r\n                                <RouterLink to={ `/planningPeriods/${planningPeriodId}/dedicatedTeams/${dedicatedTeam.id}` }>\r\n                                { dedicatedTeam.name }\r\n                                </RouterLink>\r\n                            </li>\r\n                        )\r\n                    )}\r\n                </ul>\r\n            </Box>\r\n        );\r\n    }\r\n}\r\n\r\nexport default graphql(fetchDedicatedTeamPlanningPeriodByPlanningPeriodIdAndDedicatedTeamId, {\r\n    options: (props) => { return { variables: { planningPeriodId: props.match.params.planningPeriodId, dedicatedTeamId: props.match.params.dedicatedTeamId }}}\r\n})(DedicatedTeamPlanningPeriodDetail);"]},"metadata":{},"sourceType":"module"}