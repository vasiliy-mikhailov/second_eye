{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikhaylovv\\\\PycharmProjects\\\\second_eye\\\\client\\\\src\\\\components\\\\CapacityAndQueue.js\";\nimport React, { Component } from \"react\";\nimport { gql } from '@apollo/client';\nimport { graphql } from '@apollo/client/react/hoc';\nimport Typography from '@material-ui/core/Typography';\nimport { Box } from \"@material-ui/core\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchCapacityAndQueue = gql`\nquery capacityAndQueue {\n    companies {\n        id\n        name\n        actualChangeRequestCapacity\n        actualAnalysisCapacity\n        actualDevelopmentCapacity\n        actualTestingCapacity\n        \n        timeLeft\n        analysisTimeLeft\n        developmentTimeLeft\n        testingTimeLeft\n        \n        queueLength\n        analysisQueueLength\n        developmentQueueLength\n        testingQueueLength\n    }\n    \n    dedicatedTeams {\n        id\n        name\n        actualChangeRequestCapacity\n        actualAnalysisCapacity\n        actualDevelopmentCapacity\n        actualTestingCapacity\n        \n        timeLeft\n        analysisTimeLeft\n        developmentTimeLeft\n        testingTimeLeft\n        \n        queueLength\n        analysisQueueLength\n        developmentQueueLength\n        testingQueueLength\n    }\n    \n    projectTeams {\n        id\n        name\n        actualChangeRequestCapacity\n        actualAnalysisCapacity\n        actualDevelopmentCapacity\n        actualTestingCapacity\n        \n        timeLeft\n        analysisTimeLeft\n        developmentTimeLeft\n        testingTimeLeft\n        \n        queueLength\n        analysisQueueLength\n        developmentQueueLength\n        testingQueueLength\n    }\n}\n`;\n\nclass CapacityAndQueue extends Component {\n  render() {\n    if (this.props.data.loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 47\n      }, this);\n    }\n\n    const planningPeriods = this.props.data.planningPeriods;\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: \"\\u041F\\u0435\\u0440\\u0438\\u043E\\u0434\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: planningPeriods.slice().sort(function (a, b) {\n          if (a.start < b.start) {\n            return 1;\n          }\n\n          if (a.start === b.start) {\n            return 0;\n          }\n\n          if (a.start > b.start) {\n            return -1;\n          }\n        }).map(planningPeriod => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(RouterLink, {\n            to: `/planningPeriods/${planningPeriod.id}`,\n            children: planningPeriod.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 33\n          }, this), \"\\xA0 (\", planningPeriod.start, \" - \", planningPeriod.end, \")\"]\n        }, planningPeriod.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default graphql(fetchCapacityAndQueue)(CapacityAndQueue);","map":{"version":3,"sources":["C:/Users/mikhaylovv/PycharmProjects/second_eye/client/src/components/CapacityAndQueue.js"],"names":["React","Component","gql","graphql","Typography","Box","Link","RouterLink","fetchCapacityAndQueue","CapacityAndQueue","render","props","data","loading","planningPeriods","slice","sort","a","b","start","map","planningPeriod","id","name","end"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,GAAR,QAAkB,gBAAlB;AACA,SAASC,OAAT,QAAwB,0BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAAQC,GAAR,QAAkB,mBAAlB;AACA,SAAQC,IAAI,IAAIC,UAAhB,QAAiC,kBAAjC;;AAEA,MAAMC,qBAAqB,GAAGN,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3DA;;AA6DA,MAAMO,gBAAN,SAA+BR,SAA/B,CAAyC;AACrCS,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,OAApB,EAA6B;AAAE,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AAA+B;;AAE9D,UAAMC,eAAe,GAAG,KAAKH,KAAL,CAAWC,IAAX,CAAgBE,eAAxC;AAEA,wBACI,QAAC,GAAD;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA,kBACMA,eAAe,CACZC,KADH,GAEGC,IAFH,CAEQ,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACjB,cAAID,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAhB,EAAuB;AACnB,mBAAO,CAAP;AACH;;AACD,cAAIF,CAAC,CAACE,KAAF,KAAYD,CAAC,CAACC,KAAlB,EAAyB;AACrB,mBAAO,CAAP;AACH;;AACD,cAAIF,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAhB,EAAuB;AACnB,mBAAO,CAAC,CAAR;AACH;AACJ,SAZH,EAaGC,GAbH,CAaOC,cAAc,iBACf;AAAA,kCACI,QAAC,UAAD;AAAY,YAAA,EAAE,EAAI,oBAAmBA,cAAc,CAACC,EAAG,EAAvD;AAAA,sBACED,cAAc,CAACE;AADjB;AAAA;AAAA;AAAA;AAAA,kBADJ,YAKOF,cAAc,CAACF,KALtB,SAKkCE,cAAc,CAACG,GALjD;AAAA,WAAUH,cAAc,CAACC,EAAzB;AAAA;AAAA;AAAA;AAAA,gBAdN;AADN;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAiCH;;AAvCoC;;AA0CzC,eAAenB,OAAO,CAACK,qBAAD,CAAP,CAA+BC,gBAA/B,CAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport {gql} from '@apollo/client';\r\nimport { graphql } from '@apollo/client/react/hoc';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Box} from \"@material-ui/core\";\r\nimport {Link as RouterLink} from \"react-router-dom\";\r\n\r\nconst fetchCapacityAndQueue = gql`\r\nquery capacityAndQueue {\r\n    companies {\r\n        id\r\n        name\r\n        actualChangeRequestCapacity\r\n        actualAnalysisCapacity\r\n        actualDevelopmentCapacity\r\n        actualTestingCapacity\r\n        \r\n        timeLeft\r\n        analysisTimeLeft\r\n        developmentTimeLeft\r\n        testingTimeLeft\r\n        \r\n        queueLength\r\n        analysisQueueLength\r\n        developmentQueueLength\r\n        testingQueueLength\r\n    }\r\n    \r\n    dedicatedTeams {\r\n        id\r\n        name\r\n        actualChangeRequestCapacity\r\n        actualAnalysisCapacity\r\n        actualDevelopmentCapacity\r\n        actualTestingCapacity\r\n        \r\n        timeLeft\r\n        analysisTimeLeft\r\n        developmentTimeLeft\r\n        testingTimeLeft\r\n        \r\n        queueLength\r\n        analysisQueueLength\r\n        developmentQueueLength\r\n        testingQueueLength\r\n    }\r\n    \r\n    projectTeams {\r\n        id\r\n        name\r\n        actualChangeRequestCapacity\r\n        actualAnalysisCapacity\r\n        actualDevelopmentCapacity\r\n        actualTestingCapacity\r\n        \r\n        timeLeft\r\n        analysisTimeLeft\r\n        developmentTimeLeft\r\n        testingTimeLeft\r\n        \r\n        queueLength\r\n        analysisQueueLength\r\n        developmentQueueLength\r\n        testingQueueLength\r\n    }\r\n}\r\n`;\r\n\r\nclass CapacityAndQueue extends Component {\r\n    render() {\r\n        if (this.props.data.loading) { return <div>Loading ...</div> }\r\n\r\n        const planningPeriods = this.props.data.planningPeriods\r\n\r\n        return (\r\n            <Box>\r\n                <Typography variant=\"body1\">\r\n                    Периоды\r\n                </Typography>\r\n\r\n                <ul>\r\n                    { planningPeriods\r\n                        .slice()\r\n                        .sort(function(a, b) {\r\n                            if (a.start < b.start) {\r\n                                return 1;\r\n                            }\r\n                            if (a.start === b.start) {\r\n                                return 0;\r\n                            }\r\n                            if (a.start > b.start) {\r\n                                return -1;\r\n                            }\r\n                        })\r\n                        .map(planningPeriod => (\r\n                            <li key={ planningPeriod.id }>\r\n                                <RouterLink to={ `/planningPeriods/${planningPeriod.id}` }>\r\n                                { planningPeriod.name }\r\n                                </RouterLink>\r\n                                &nbsp;\r\n                                ({ planningPeriod.start } - { planningPeriod.end })\r\n                            </li>\r\n                        )\r\n                    )}\r\n                </ul>\r\n            </Box>\r\n        );\r\n    }\r\n}\r\n\r\nexport default graphql(fetchCapacityAndQueue)(CapacityAndQueue);"]},"metadata":{},"sourceType":"module"}